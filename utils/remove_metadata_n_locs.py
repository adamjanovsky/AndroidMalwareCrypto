import argparse
import json
import gc
import ijson

def main() -> None:

    parser = argparse.ArgumentParser(description="Remove `classes_loc` and replace with `metadata_n_classes` and `metadata_n_lines`")
    parser.add_argument(
        "input_json_path",
        metavar="INPUT_JSON_PATH", 
        type=str, 
        help="path to processed records in json"
    )
    parser.add_argument(
        "output_json_path",
        metavar="OUTPUT_JSON_PATH", 
        type=str, 
        help="path where to store output records"
    )
    args = parser.parse_args()
    print("Loading data.")
    with open(args.input_json_path, "r") as handle:
        kvitems = ijson.kvitems(handle, "")
        print("Removing `classes_loc`.")
        result = {}
        for key, record in kvitems:
            record_classes = record["classes_loc"]
            record["metadata_n_classes"] = len(record_classes)
            record["metadata_n_lines"] = sum([len(l) for l in record_classes.values()])
            del record["classes_loc"]
            gc.collect()
            result[key] = record
    print("Saving data.")
    with open(args.output_json_path, "w") as handle:
        json.dump(result, handle)    

if __name__ == "__main__":
    main()