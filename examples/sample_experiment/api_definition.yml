encryption:
  obfuscated: "Cipher.getInstance("
  values:
    PBE:
      - 'Cipher.getInstance("PBEWITHMD5andDES'
      - 'Cipher.getInstance("PBEWithMD5AndDES'
      - 'Cipher.getInstance("PBEWithMD5AndDES/CBC/PKCS5Padding'
      - 'Cipher.getInstance("PBEWithSHA256And256BitAES-CBC-BC'
      - 'Cipher.getInstance("PBEWITHSHA-256AND256BITAES-CBC-BC'
      - 'Cipher.getInstance("PBEWITHSHAAND128BITRC4'
      - 'Cipher.getInstance("PBEWithMD5And128BitAES-CBC-OpenSSL'
    AES:
      - 'Cipher.getInstance("AES'
      - 'Cipher.getInstance("AES/CBC/ISO10126Padding'
      - 'Cipher.getInstance("AES/CBC/NoPadding'
      - 'Cipher.getInstance("AES/CBC/PKCS5Padding'
      - 'Cipher.getInstance("AES/CFB/ISO10126Padding'
      - 'Cipher.getInstance("AES/CFB/NoPadding'
      - 'Cipher.getInstance("AES/CFB/PKCS5Padding'
      - 'Cipher.getInstance("AES/CTR/ISO10126Padding'
      - 'Cipher.getInstance("AES/CTR/NoPadding'
      - 'Cipher.getInstance("AES/CTR/PKCS5Padding'
      - 'Cipher.getInstance("AES/CTS/ISO10126Padding'
      - 'Cipher.getInstance("AES/CTS/NoPadding'
      - 'Cipher.getInstance("AES/CTS/PKCS5Padding'
      - 'Cipher.getInstance("AES/ECB/ISO10126Padding'
      - 'Cipher.getInstance("AES/ECB/NoPadding'
      - 'Cipher.getInstance("AES/ECB/PKCS5Padding'
      - 'Cipher.getInstance("AES/OFB/ISO10126Padding'
      - 'Cipher.getInstance("AES/OFB/NoPadding'
      - 'Cipher.getInstance("AES/OFB/PKCS5Padding'
      - 'Cipher.getInstance("AES/GCM/NoPadding'
      - 'Cipher.getInstance("AES_128'
      - 'Cipher.getInstance("AES_128/CBC/NoPadding'
      - 'Cipher.getInstance("AES_128/CBC/PKCS5Padding'
      - 'Cipher.getInstance("AES_128/ECB/NoPadding'
      - 'Cipher.getInstance("AES_128/ECB/PKCS5Padding'
      - 'Cipher.getInstance("AES_128/GCM/NoPadding'
      - 'Cipher.getInstance("AES_256'
      - 'Cipher.getInstance("AES_256/CBC/NoPadding'
      - 'Cipher.getInstance("AES_256/CBC/PKCS5Padding'
      - 'Cipher.getInstance("AES_256/ECB/NoPadding'
      - 'Cipher.getInstance("AES_256/ECB/PKCS5Padding'
      - 'Cipher.getInstance("AES_256/GCM/NoPadding'
      - 'Cipher.getInstance("AES/CBC/PKCS7Padding'
      - 'Cipher.getInstance("AES/ECB/PKCS7Padding'
      - 'Cipher.getInstance("AES/ECB/ZeroBytePadding'
      - 'Cipher.getInstance("AES/CFB8/NoPadding'
      - 'Cipher.getInstance("AES/CBC/ZeroBytePadding'
      - 'Cipher.getInstance("AES/CFB/PKCS7Padding'
    DES:
      - 'Cipher.getInstance("DES'
      - 'Cipher.getInstance("DES/CBC/ISO10126Padding'
      - 'Cipher.getInstance("DES/CBC/NoPadding'
      - 'Cipher.getInstance("DES/CBC/PKCS5Padding'
      - 'Cipher.getInstance("DES/CFB/ISO10126Padding'
      - 'Cipher.getInstance("DES/CFB/NoPadding'
      - 'Cipher.getInstance("DES/CFB/PKCS5Padding'
      - 'Cipher.getInstance("DES/CTR/ISO10126Padding'
      - 'Cipher.getInstance("DES/CTR/NoPadding'
      - 'Cipher.getInstance("DES/CTR/PKCS5Padding'
      - 'Cipher.getInstance("DES/CTS/ISO10126Padding'
      - 'Cipher.getInstance("DES/CTS/NoPadding'
      - 'Cipher.getInstance("DES/CTS/PKCS5Padding'
      - 'Cipher.getInstance("DES/ECB/ISO10126Padding'
      - 'Cipher.getInstance("DES/ECB/NoPadding'
      - 'Cipher.getInstance("DES/ECB/PKCS5Padding'
      - 'Cipher.getInstance("DES/OFB/ISO10126Padding'
      - 'Cipher.getInstance("DES/OFB/NoPadding'
      - 'Cipher.getInstance("DES/OFB/PKCS5Padding'
      - 'Cipher.getInstance("DES/CBC/PKCS7Padding'
      - 'Cipher.getInstance("DES/ECB/PKCS7Padding'
      - 'Cipher.getInstance("DES/CFB8/NoPadding'
    BLOWFISH:
      - 'Cipher.getInstance("BLOWFISH'
      - 'Cipher.getInstance("BLOWFISH/CBC/ISO10126Padding'
      - 'Cipher.getInstance("BLOWFISH/CBC/NoPadding'
      - 'Cipher.getInstance("BLOWFISH/CBC/PKCS5Padding'
      - 'Cipher.getInstance("BLOWFISH/CFB/ISO10126Padding'
      - 'Cipher.getInstance("BLOWFISH/CFB/NoPadding'
      - 'Cipher.getInstance("BLOWFISH/CFB/PKCS5Padding'
      - 'Cipher.getInstance("BLOWFISH/CTR/ISO10126Padding'
      - 'Cipher.getInstance("BLOWFISH/CTR/NoPadding'
      - 'Cipher.getInstance("BLOWFISH/CTR/PKCS5Padding'
      - 'Cipher.getInstance("BLOWFISH/CTS/ISO10126Padding'
      - 'Cipher.getInstance("BLOWFISH/CTS/NoPadding'
      - 'Cipher.getInstance("BLOWFISH/CTS/PKCS5Padding'
      - 'Cipher.getInstance("BLOWFISH/ECB/ISO10126Padding'
      - 'Cipher.getInstance("BLOWFISH/ECB/NoPadding'
      - 'Cipher.getInstance("BLOWFISH/ECB/PKCS5Padding'
      - 'Cipher.getInstance("BLOWFISH/OFB/ISO10126Padding'
      - 'Cipher.getInstance("BLOWFISH/OFB/NoPadding'
      - 'Cipher.getInstance("BLOWFISH/OFB/PKCS5Padding'
    3DES:
      - 'Cipher.getInstance("DESede'
      - 'Cipher.getInstance("DESede/CBC/ISO10126Padding'
      - 'Cipher.getInstance("DESede/CBC/NoPadding'
      - 'Cipher.getInstance("DESede/CBC/PKCS5Padding'
      - 'Cipher.getInstance("DESede/CFB/ISO10126Padding'
      - 'Cipher.getInstance("DESede/CFB/NoPadding'
      - 'Cipher.getInstance("DESede/CFB/PKCS5Padding'
      - 'Cipher.getInstance("DESede/CTR/ISO10126Padding'
      - 'Cipher.getInstance("DESede/CTR/NoPadding'
      - 'Cipher.getInstance("DESede/CTR/PKCS5Padding'
      - 'Cipher.getInstance("DESede/CTS/ISO10126Padding'
      - 'Cipher.getInstance("DESede/CTS/NoPadding'
      - 'Cipher.getInstance("DESede/CTS/PKCS5Padding'
      - 'Cipher.getInstance("DESede/ECB/ISO10126Padding'
      - 'Cipher.getInstance("DESede/ECB/NoPadding'
      - 'Cipher.getInstance("DESede/ECB/PKCS5Padding'
      - 'Cipher.getInstance("DESede/OFB/ISO10126Padding'
      - 'Cipher.getInstance("DESede/OFB/NoPadding'
      - 'Cipher.getInstance("DESede/OFB/PKCS5Padding'
      - 'Cipher.getInstance("DESede/CBC/PKCS7PADDING'
      - 'Cipher.getInstance("DESede/ECB/PKCS7Padding'
      - 'Cipher.getInstance("DESede/CBC/PKCS7Padding'
      - 'Cipher.getInstance("DESede/CFB8/NoPadding'
      - 'Cipher.getInstance("DESEDE/ECB/PKCS7Padding'
    ARC4:
      - 'Cipher.getInstance("ARC4'
      - 'Cipher.getInstance("ARC4/ECB/NoPadding'
      - 'Cipher.getInstance("ARC4/NONE/NoPadding'
      - 'Cipher.getInstance("RC4'
    CHACHA:
      - 'Cipher.getInstance("ChaCha20'
      - 'Cipher.getInstance("ChaCha20/NONE/NoPadding'
      - 'Cipher.getInstance("ChaCha20/Poly1305/NoPadding'
    RSA:
      - 'Cipher.getInstance("RSA'
      - 'Cipher.getInstance("RSA/ECB/NoPadding'
      - 'Cipher.getInstance("RSA/ECB/OAEPPadding'
      - 'Cipher.getInstance("RSA/ECB/PKCS1Padding'
      - 'Cipher.getInstance("RSA/NONE/NoPadding'
      - 'Cipher.getInstance("RSA/NONE/OAEPPadding'
      - 'Cipher.getInstance("RSA/NONE/PKCS1Padding'
      - 'Cipher.getInstance("OAEPwithSHA-1andMGF1Padding'
      - 'Cipher.getInstance("OAEPwithSHA-256andMGF1Padding'
      - 'Cipher.getInstance("OAEPwithSHA-224andMGF1Padding'
      - 'Cipher.getInstance("OAEPwithSHA-384andMGF1Padding'
      - 'Cipher.getInstance("OAEPwithSHA-512andMGF1Padding'
      - 'Cipher.getInstance("RSA/ECB/OAEPWITHSHA-1ANDMGF1PADDING'
      - 'Cipher.getInstance("RSA/ECB/OAEPWithSHA1AndMGF1Padding'
      - 'Cipher.getInstance("RSA/ECB/OAEPWITHSHA1ANDMGF1PADDING'
      - 'Cipher.getInstance("RSA/NONE/OAEPWithSHA256AndMGF1Padding'
      - 'Cipher.getInstance("RSA/ECB/OAEPWithSHA-1AndMGF1Padding'

hash_functions:
  obfuscated: "MessageDigest.getInstance("
  values:
    - 'MessageDigest.getInstance("MD2'
    - 'MessageDigest.getInstance("MD5'
    - 'MessageDigest.getInstance("SHA-1'
    - 'MessageDigest.getInstance("SHA-224'
    - 'MessageDigest.getInstance("SHA-256'
    - 'MessageDigest.getInstance("SHA-384'
    - 'MessageDigest.getInstance("SHA-512'
    - 'MessageDigest.getInstance("SHA-512/224'
    - 'MessageDigest.getInstance("SHA-512/256'

digital_signature:
  obfuscated: "Signature.getInstance("
  values:
    - 'Signature.getInstance("DSA'
    - 'Signature.getInstance("DSAwithSHA1'
    - 'Signature.getInstance("DSS'
    - 'Signature.getInstance("ECDSA'
    - 'Signature.getInstance("ECDSAwithSHA1'
    - 'Signature.getInstance("MD2withRSA'
    - 'Signature.getInstance("MD4withRSA'
    - 'Signature.getInstance("MD5withRSA'
    - 'Signature.getInstance("MD5withRSA/ISO9796-2'
    - 'Signature.getInstance("NONEwithDSA'
    - 'Signature.getInstance("NONEwithECDSA'
    - 'Signature.getInstance("NONEwithRSA'
    - 'Signature.getInstance("RSASSA-PSS'
    - 'Signature.getInstance("SHA1withDSA'
    - 'Signature.getInstance("SHA1withECDSA'
    - 'Signature.getInstance("SHA1withRSA'
    - 'Signature.getInstance("SHA1withRSA/ISO9796-2'
    - 'Signature.getInstance("SHA1withRSA/PSS'
    - 'Signature.getInstance("SHA224withDSA'
    - 'Signature.getInstance("SHA224withECDSA'
    - 'Signature.getInstance("SHA224withRSA'
    - 'Signature.getInstance("SHA224withRSA/PSS'
    - 'Signature.getInstance("SHA256withDSA'
    - 'Signature.getInstance("SHA256withECDSA'
    - 'Signature.getInstance("SHA256withRSA'
    - 'Signature.getInstance("SHA256withRSA/PSS'
    - 'Signature.getInstance("SHA384withECDSA'
    - 'Signature.getInstance("SHA384withRSA'
    - 'Signature.getInstance("SHA384withRSA/PSS'
    - 'Signature.getInstance("SHA512withECDSA'
    - 'Signature.getInstance("SHA512withRSA'
    - 'Signature.getInstance("SHA512withRSA/PSS'

MAC:
  obfuscated: "Mac.getInstance("
  values:
    - 'Mac.getInstance("DESMAC'
    - 'Mac.getInstance("DESMAC/CFB8'
    - 'Mac.getInstance("DESedeMAC'
    - 'Mac.getInstance("DESedeMAC/CFB8'
    - 'Mac.getInstance("DESedeMAC64'
    - 'Mac.getInstance("DESwithISO9797'
    - 'Mac.getInstance("HmacMD5'
    - 'Mac.getInstance("HmacSHA1'
    - 'Mac.getInstance("HmacSHA224'
    - 'Mac.getInstance("HmacSHA256'
    - 'Mac.getInstance("HmacSHA384'
    - 'Mac.getInstance("HmacSHA512'
    - 'Mac.getInstance("ISO9797ALG3MAC'
    - 'Mac.getInstance("PBEwithHmacSHA'
    - 'Mac.getInstance("PBEwithHmacSHA1'
    - 'Mac.getInstance("PBEwithHmacSHA224'
    - 'Mac.getInstance("PBEwithHmacSHA256'
    - 'Mac.getInstance("PBEwithHmacSHA384'
    - 'Mac.getInstance("PBEwithHmacSHA512'

SecureRandom:
  obfuscated: "SecureRandom.getInstance("
  values:
    - 'SecureRandom.getInstance("NativePRNG'
    - 'SecureRandom.getInstance("NativePRNGBlocking'
    - 'SecureRandom.getInstance("NativePRNGNonBlocking'
    - 'SecureRandom.getInstance("PKCS11'
    - 'SecureRandom.getInstance("SHA1PRNG'
    - 'SecureRandom.getInstance("Windows-PRNG'
    - 'SecureRandom.getInstance("X9.17'
    - 'SecureRandom.getInstance("FIPS186-2Appendix3'
KeyAgreement:
  obfuscated: "KeyAgreement.getInstance("
  values:
    - 'KeyAgreement.getInstance("DiffieHellman'
    - 'KeyAgreement.getInstance("ECDH'
    - 'KeyAgreement.getInstance("ECMQV'
KeyPairGenerator:
  obfuscated: "KeyPairGenerator.getInstance("
  values:
    - 'KeyPairGenerator.getInstance("DH'
    - 'KeyPairGenerator.getInstance("DiffieHellman'
    - 'KeyPairGenerator.getInstance("DSA'
    - 'KeyPairGenerator.getInstance("EC'
    - 'KeyPairGenerator.getInstance("RSA'
    - 'AlgorithmParameterGenerator.getInstance("DiffieHellman'
# EllipticCurves:
#   obfuscated: "pass"
#   values:
#     - 'KeyFactory.getInstance("EC'
#     - "ECPrivateKeySpec("
#     - "ECFieldFp("
#     - "ECParameterSpec("
#     - "ECGenParameterSpec("
#     - "ECFieldF2m("
