#!/usr/bin/env python
import argparse
import logging
import sys
from datetime import datetime


import androidcrypto.constants as constants
from androidcrypto import experiment
from androidcrypto.config_parser import ExperimentConfigParser, ConfigException

sys.path.append("..")


def main():
    handlers = [logging.FileHandler(constants.LOGS_FILENAME), logging.StreamHandler()]
    logging.basicConfig(level=logging.INFO, handlers=handlers)

    parser = argparse.ArgumentParser(
        description='Mapping the ecosystem of cryptography usage in Android malware.'
    )

    parser.add_argument('config', type=str, help='path to the file with config.yml')
    parser.add_argument('-n', '--neptune', type=str, help='Neptune.ml API token', default=None)
    parser.add_argument('-a', '--androzoo', type=str, help='Androzoo API token', default=None)
    args = parser.parse_args()

    start = datetime.now()

    logging.info('Parsing experiment config.')
    config_parser = ExperimentConfigParser(args.config, args.neptune, args.androzoo)
    try:
        exp_config = config_parser.parse_config_file()
    except ConfigException as e:
        logging.error(f'Failed to parse experiment config, aborting due to: {e}')
    else:
        exp = experiment.Experiment(exp_config)
        logging.info(f'Running experiment on: {datetime.now()}')
        exp.run()
        end = datetime.now()
        logging.info(f'Finished experiment. Computation took {end - start} seconds.')


if __name__ == '__main__':
    main()
