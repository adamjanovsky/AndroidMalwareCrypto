import pyjadx
import os
from tqdm import tqdm


class Analyzer:
    def __init__(self):
        self.jadx = pyjadx.Jadx()
        self.decompiler = None

    def decompile_apk(self, filepath):
        self.decompiler = self.jadx.load(filepath)

    def find_string_in_code(self):
        pass



def get_all_apks(dirpath):
    apks = []
    for root, dirs, files in os.walk(dirpath):
        for file in files:
            if file.endswith('.apk'):
                apks.append(os.path.join(root, file))
    return apks


def find_crypto_stuff(code):
    for line in code.split('\n'):
        if 'javax.crypto' in line:
            print(line)


def find_crypto_usages(jadx, apk_filepath):
    decompiler = jadx.load(apk_filepath, show_inconsistent_code=True)
    for cls in decompiler.classes:
        code = cls.code
        find_crypto_stuff(code)


def decompile_all(dirpath):
    jadx = pyjadx.Jadx()
    for apk in tqdm(get_all_apks(dirpath)):
        find_crypto_usages(jadx, apk)


def main():
    jadx = pyjadx.Jadx()
    find_crypto_usages(jadx, '/Users/adam/phd/projects/mlw/datasets/manually_analyzed/locker-5b7445c3497b7998cf6f4d04e70aa4002b5e8d272f2eabb42ce9d638b84f29c4.apk')


if __name__ == '__main__':
    main()
