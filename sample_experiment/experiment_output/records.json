{"570232b8f1b197fcf31a91a924f0fa2b0480a7b1cd98c2f0ab79b1110eb94e3c": {"metadata": {"apk_path": null, "dx_path": null, "dex_year": null, "euphony_name": null, "euphony_type": null}, "third_party_crypto_libs": [], "third_party_packages": ["Lnet/sourceforge/pinyin4j", "Lnet/lingala/zip4j", "Lnet/tsz/afinal", "Lcom/actionbarsherlock", "Lcom/umeng/analytics", "Lcom/umeng/fb", "Lcom/umeng/update", "Lcom/umeng/common", "Lcom/viewpagerindicator", "Lcn/jpush/android", "Landroid/support/v4", "Lorg/apache/commons", "Lorg/spongycastle", "Lkellinwood/zipio", "Lnet/lingala", "Lcom/adfeiwo/ad", "Lcom/adfeiwo/banner", "Lcom/lmono/android", "Lcom/feiwo", "Lcom/hp"], "standard_third_party_packages": ["Lnet/sourceforge/pinyin4j", "Lnet/lingala/zip4j", "Lnet/tsz/afinal", "Lcom/actionbarsherlock", "Lcom/umeng/analytics", "Lcom/umeng/fb", "Lcom/umeng/update", "Lcom/umeng/common", "Lcom/viewpagerindicator", "Lcn/jpush/android", "Landroid/support/v4", "Lorg/apache/commons", "Lorg/spongycastle", "Lkellinwood/zipio", "Lnet/lingala", "Lcom/adfeiwo/ad", "Lcom/adfeiwo/banner", "Lcom/lmono/android", "Lcom/feiwo", "Lcom/hp"], "crypto_imports": {"java.security.messagedigest": 8, "java.security.key": 17, "java.security.privatekey": 5, "javax.crypto.cipher": 4, "java.security.digestoutputstream": 3, "java.security.keyfactory": 3, "java.security.spec.pkcs8encodedkeyspec": 3, "javax.crypto.encryptedprivatekeyinfo": 3, "javax.crypto.secretkeyfactory": 2, "javax.crypto.secretkey": 2, "javax.crypto.spec.pbekeyspec": 2, "java.security.keypair": 2, "java.security.keypairgenerator": 1, "java.security.securerandom": 2, "java.security.digestinputstream": 1, "javax.crypto.spec.secretkeyspec": 2}, "crypto_api_records": {"Lcom/mpaopao/client/tools/utils/MD5Generate;": [["MessageDigest.getInstance(", "            MessageDigest md = MessageDigest.getInstance(\"MD5\");", 9], ["MessageDigest.getInstance(\"MD5", "            MessageDigest md = MessageDigest.getInstance(\"MD5\");", 9]], "Lcom/xinmei365/font/AppConnect;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 997], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 997]], "Lcom/xinmei365/font/utils/MD5Generate;": [["MessageDigest.getInstance(", "            MessageDigest md = MessageDigest.getInstance(\"MD5\");", 9], ["MessageDigest.getInstance(\"MD5", "            MessageDigest md = MessageDigest.getInstance(\"MD5\");", 9]], "Lkellinwood/security/zipsigner/ZipSignature;": [["Cipher.getInstance(", "    Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 13], ["Cipher", "    Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 13], ["Cipher.getInstance(\"RSA", "    Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 13], ["Cipher.getInstance(\"RSA/ECB/PKCS1Padding", "    Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 13], ["MessageDigest.getInstance(", "    MessageDigest md = MessageDigest.getInstance(\"SHA1\");", 14], ["Cipher", "        this.cipher.init(1, privateKey);", 17], ["Cipher", "        this.cipher.update(this.beforeAlgorithmIdBytes);", 29], ["Cipher", "        this.cipher.update(this.algorithmIdBytes);", 30], ["Cipher", "        this.cipher.update(this.afterAlgorithmIdBytes);", 31], ["Cipher", "        this.cipher.update(this.md.digest());", 32], ["Cipher", "        return this.cipher.doFinal();", 33]], "Lkellinwood/security/zipsigner/ZipSigner$AutoKeyObservable;": [["MessageDigest.getInstance(", "                MessageDigest md5 = MessageDigest.getInstance(\"MD5\");", 127], ["MessageDigest.getInstance(\"MD5", "                MessageDigest md5 = MessageDigest.getInstance(\"MD5\");", 127], ["EncryptedPrivateKeyInfo", "            EncryptedPrivateKeyInfo epkInfo = new EncryptedPrivateKeyInfo(encryptedPrivateKey);", 230], ["PBEKeySpec(", "            Key key = SecretKeyFactory.getInstance(epkInfo.getAlgName()).generateSecret(new PBEKeySpec(keyPassword.toCharArray()));", 231], ["KeyFactory.getInstance(", "            Key key = SecretKeyFactory.getInstance(epkInfo.getAlgName()).generateSecret(new PBEKeySpec(keyPassword.toCharArray()));", 231], ["generateSecret(", "            Key key = SecretKeyFactory.getInstance(epkInfo.getAlgName()).generateSecret(new PBEKeySpec(keyPassword.toCharArray()));", 231], ["generateSecret(", "            Key key = SecretKeyFactory.getInstance(epkInfo.getAlgName()).generateSecret(new PBEKeySpec(keyPassword.toCharArray()));", 231], ["SecretKeyFactory.getInstance(", "            Key key = SecretKeyFactory.getInstance(epkInfo.getAlgName()).generateSecret(new PBEKeySpec(keyPassword.toCharArray()));", 231], ["Cipher.getInstance(", "            Cipher cipher = Cipher.getInstance(epkInfo.getAlgName());", 232], ["Cipher", "            Cipher cipher = Cipher.getInstance(epkInfo.getAlgName());", 232], ["Cipher", "            cipher.init(2, key, epkInfo.getAlgParameters());", 233], ["Cipher", "                return epkInfo.getKeySpec(cipher);", 235], ["getKeySpec(", "                return epkInfo.getKeySpec(cipher);", 235], ["PKCS8EncodedKeySpec", "                spec = new PKCS8EncodedKeySpec(bytes);", 268], ["KeyFactory.getInstance(", "            generatePrivate = KeyFactory.getInstance(\"RSA\").generatePrivate(spec);", 270], ["KeyFactory.getInstance(\"RSA", "            generatePrivate = KeyFactory.getInstance(\"RSA\").generatePrivate(spec);", 270], ["KeyFactory.getInstance(", "            generatePrivate = KeyFactory.getInstance(\"DSA\").generatePrivate(spec);", 272], ["KeyFactory.getInstance(\"DSA", "            generatePrivate = KeyFactory.getInstance(\"DSA\").generatePrivate(spec);", 272], ["MessageDigest.getInstance(", "        MessageDigest md = MessageDigest.getInstance(\"SHA1\");", 295], ["MessageDigest.getInstance(", "        MessageDigest md = MessageDigest.getInstance(\"SHA1\");", 340], ["DigestOutputStream(", "        PrintStream print = new PrintStream(new DigestOutputStream(new ByteArrayOutputStream(), md), true, e.f);", 341], ["MessageDigest.getInstance(", "                MessageDigest md = MessageDigest.getInstance(\"SHA1\");", 372], ["Cipher.getInstance(", "                Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 376], ["Cipher", "                Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 376], ["Cipher.getInstance(\"RSA", "                Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 376], ["Cipher.getInstance(\"RSA/ECB/PKCS1Padding", "                Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 376], ["Cipher", "                cipher.init(2, keySet2.getPublicKey());", 377], ["Cipher", "                getLogger().debug(\"Signature Decrypted: \\n\" + HexDumpEncoder.encode(cipher.doFinal(signatureBytes)));", 378]], "Lkellinwood/security/zipsigner/ZipSigner;": [["MessageDigest.getInstance(", "                MessageDigest md5 = MessageDigest.getInstance(\"MD5\");", 127], ["MessageDigest.getInstance(\"MD5", "                MessageDigest md5 = MessageDigest.getInstance(\"MD5\");", 127], ["EncryptedPrivateKeyInfo", "            EncryptedPrivateKeyInfo epkInfo = new EncryptedPrivateKeyInfo(encryptedPrivateKey);", 230], ["PBEKeySpec(", "            Key key = SecretKeyFactory.getInstance(epkInfo.getAlgName()).generateSecret(new PBEKeySpec(keyPassword.toCharArray()));", 231], ["KeyFactory.getInstance(", "            Key key = SecretKeyFactory.getInstance(epkInfo.getAlgName()).generateSecret(new PBEKeySpec(keyPassword.toCharArray()));", 231], ["generateSecret(", "            Key key = SecretKeyFactory.getInstance(epkInfo.getAlgName()).generateSecret(new PBEKeySpec(keyPassword.toCharArray()));", 231], ["generateSecret(", "            Key key = SecretKeyFactory.getInstance(epkInfo.getAlgName()).generateSecret(new PBEKeySpec(keyPassword.toCharArray()));", 231], ["SecretKeyFactory.getInstance(", "            Key key = SecretKeyFactory.getInstance(epkInfo.getAlgName()).generateSecret(new PBEKeySpec(keyPassword.toCharArray()));", 231], ["Cipher.getInstance(", "            Cipher cipher = Cipher.getInstance(epkInfo.getAlgName());", 232], ["Cipher", "            Cipher cipher = Cipher.getInstance(epkInfo.getAlgName());", 232], ["Cipher", "            cipher.init(2, key, epkInfo.getAlgParameters());", 233], ["Cipher", "                return epkInfo.getKeySpec(cipher);", 235], ["getKeySpec(", "                return epkInfo.getKeySpec(cipher);", 235], ["PKCS8EncodedKeySpec", "                spec = new PKCS8EncodedKeySpec(bytes);", 268], ["KeyFactory.getInstance(", "            generatePrivate = KeyFactory.getInstance(\"RSA\").generatePrivate(spec);", 270], ["KeyFactory.getInstance(\"RSA", "            generatePrivate = KeyFactory.getInstance(\"RSA\").generatePrivate(spec);", 270], ["KeyFactory.getInstance(", "            generatePrivate = KeyFactory.getInstance(\"DSA\").generatePrivate(spec);", 272], ["KeyFactory.getInstance(\"DSA", "            generatePrivate = KeyFactory.getInstance(\"DSA\").generatePrivate(spec);", 272], ["MessageDigest.getInstance(", "        MessageDigest md = MessageDigest.getInstance(\"SHA1\");", 295], ["MessageDigest.getInstance(", "        MessageDigest md = MessageDigest.getInstance(\"SHA1\");", 340], ["DigestOutputStream(", "        PrintStream print = new PrintStream(new DigestOutputStream(new ByteArrayOutputStream(), md), true, e.f);", 341], ["MessageDigest.getInstance(", "                MessageDigest md = MessageDigest.getInstance(\"SHA1\");", 372], ["Cipher.getInstance(", "                Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 376], ["Cipher", "                Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 376], ["Cipher.getInstance(\"RSA", "                Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 376], ["Cipher.getInstance(\"RSA/ECB/PKCS1Padding", "                Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 376], ["Cipher", "                cipher.init(2, keySet2.getPublicKey());", 377], ["Cipher", "                getLogger().debug(\"Signature Decrypted: \\n\" + HexDumpEncoder.encode(cipher.doFinal(signatureBytes)));", 378]], "Lkellinwood/security/zipsigner/optional/CertCreator;": [["KeyPairGenerator.getInstance(", "            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(keyAlgorithm);", 55], ["KeyPairGenerator.initialize(", "            keyPairGenerator.initialize(keySize);", 56], ["KeyPair(", "            KeyPair KPair = keyPairGenerator.generateKeyPair();", 57], ["SecureRandom(", "            BigInteger serialNumber = BigInteger.valueOf((long) new SecureRandom().nextInt());", 60], ["SecureRandom(", "                serialNumber = BigInteger.valueOf((long) new SecureRandom().nextInt());", 62]], "Lkellinwood/security/zipsigner/optional/Fingerprint;": [["MessageDigest.getInstance(", "            MessageDigest messageDigest = MessageDigest.getInstance(algorithm);", 13]], "Lkellinwood/security/zipsigner/optional/JKS;": [["PRIVATE_KEY", "    private static final int PRIVATE_KEY = 1;", 33], ["SecretKeySpec(", "            return new SecretKeySpec(key, alias2);", 49], ["KeyFactory.getInstance(", "            return KeyFactory.getInstance(chain[0].getPublicKey().getAlgorithm()).generatePrivate(new PKCS8EncodedKeySpec(key));", 52], ["PKCS8EncodedKeySpec", "            return KeyFactory.getInstance(chain[0].getPublicKey().getAlgorithm()).generatePrivate(new PKCS8EncodedKeySpec(key));", 52], ["EncryptedPrivateKeyInfo", "            new EncryptedPrivateKeyInfo(encodedKey);", 98], ["EncryptedPrivateKeyInfo", "            throw new KeyStoreException(\"encoded key is not an EncryptedPrivateKeyInfo\");", 110], ["MessageDigest.getInstance(", "        MessageDigest md = MessageDigest.getInstance(\"SHA1\");", 163], ["DigestOutputStream(", "        DataOutputStream dout = new DataOutputStream(new DigestOutputStream(out, md));", 166], ["MessageDigest.getInstance(", "        MessageDigest md = MessageDigest.getInstance(\"SHA\");", 196], ["DigestInputStream(", "            DataInputStream din = new DataInputStream(new DigestInputStream(in, md));", 207], ["EncryptedPrivateKeyInfo", "            byte[] encr = new EncryptedPrivateKeyInfo(encryptedPKI).getEncryptedData();", 268], ["MessageDigest.getInstance(", "            MessageDigest sha = MessageDigest.getInstance(\"SHA1\");", 274], ["MessageDigest.getInstance(", "            MessageDigest sha = MessageDigest.getInstance(\"SHA1\");", 300], ["SecureRandom.getInstance(", "            SecureRandom instance = SecureRandom.getInstance(\"SHA1PRNG\");", 301], ["SecureRandom.getInstance(\"SHA1PRNG", "            SecureRandom instance = SecureRandom.getInstance(\"SHA1PRNG\");", 301], ["EncryptedPrivateKeyInfo", "            return new EncryptedPrivateKeyInfo(\"1.3.6.1.4.1.42.2.17.1.1\", encrypted).getEncoded();", 321]], "Lkellinwood/security/zipsigner/optional/PasswordObfuscator;": [["SecretKeySpec(", "    SecretKeySpec skeySpec = new SecretKeySpec(x.getBytes(), \"AES\");", 18], ["Cipher.getInstance(", "            Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");", 69], ["Cipher", "            Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");", 69], ["Cipher.getInstance(\"AES", "            Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");", 69], ["Cipher.getInstance(\"AES/ECB/PKCS5Padding", "            Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");", 69], ["Cipher", "            cipher.init(1, this.skeySpec);", 70], ["Cipher", "            return Base64.encode(cipher.doFinal(baos.toByteArray()));", 76], ["Cipher.getInstance(", "            Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");", 88], ["Cipher", "            Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");", 88], ["Cipher.getInstance(\"AES", "            Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");", 88], ["Cipher.getInstance(\"AES/ECB/PKCS5Padding", "            Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");", 88], ["SecretKeySpec(", "            cipher.init(2, new SecretKeySpec(x.getBytes(), \"AES\"));", 89], ["Cipher", "            cipher.init(2, new SecretKeySpec(x.getBytes(), \"AES\"));", 89], ["Cipher", "            BufferedReader r = new BufferedReader(new InputStreamReader(new ByteArrayInputStream(cipher.doFinal(Base64.decode(password.getBytes())))));", 90]]}, "native_imports": []}, "a5513cc8ed6bac8ec3252a51b550ee38c1b3a463e5f21303a1af0b7d83e0fb7a": {"metadata": {"apk_path": null, "dx_path": null, "dex_year": null, "euphony_name": null, "euphony_type": null}, "third_party_crypto_libs": [], "third_party_packages": ["Landroid/support/v4", "Landroid/support/v7", "Lcom/google/android/gms", "Lcom/google/ads", "Lcom/google/firebase", "Lcom/crashlytics/android"], "standard_third_party_packages": ["Landroid/support/v4", "Landroid/support/v7", "Lcom/google/android/gms", "Lcom/google/ads", "Lcom/google/firebase", "Lcom/crashlytics/android"], "crypto_imports": {"java.security.messagedigest": 4, "java.security.securerandom": 4, "java.security.key": 3, "javax.crypto.cipher": 146, "javax.crypto.spec.secretkeyspec": 146}, "crypto_api_records": {"La/a/a/a/a/b/i$1;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(str);", 200], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(str);", 236]], "La/a/a/a/a/b/i$a;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(str);", 200], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(str);", 236]], "La/a/a/a/a/b/i;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(str);", 200], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(str);", 236]], "La/a/a/a/a/e/h;": [["MessageDigest.getInstance(", "            byte[] digest = MessageDigest.getInstance(\"SHA1\").digest(x509Certificate.getPublicKey().getEncoded());", 65]], "Lcom/kosajun/easymemorycleaner/MainActivity$10$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$10;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$11;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$12;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$13;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$14;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$15$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$15;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$16;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$17$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$17;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$18$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$18;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$19$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$19;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$20;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$21;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$22;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$23;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$24;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$25;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$26;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$27;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$28;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$29;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$30;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$31;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$32;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$33;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$34;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$35;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$36;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$37;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$38;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$39;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$3;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$40$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$40$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$40;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$41$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$41$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$41;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$42;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$43;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$44;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$45;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$46;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$47$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$47$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$47;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$48;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$49$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$49;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$4;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$50;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$51;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$52;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$53$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$53;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$54;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$55$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$55$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$55;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$56;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$57;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$58;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$59;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$5;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$60;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$61;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$62;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$63;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$64;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$65;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$66;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$67;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$68;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$69;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$6;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$70;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$71$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$71$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$71;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$72$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$72$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$72;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$73$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$73$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$73$3;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$73;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$74$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$74$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$74;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$75;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$76;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$77;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$78;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$79;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$7;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$80;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$81$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$81$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$81$3;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$81;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$82;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$83;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$84;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$85;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$86;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$87;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$8;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$9$1$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$9$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$9$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$9;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$a$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$a$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$a$3;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$a$4$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$a$4$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$a$4$3;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$a$4;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$a$5;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$a;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$b;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$c;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$d$10;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$d$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$d$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$d$3;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$d$4;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$d$5;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$d$6;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$d$7;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$d$8;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$d$9;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$d;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$e$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$e;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$f;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$g$1;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$g$2;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity$g;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Lcom/kosajun/easymemorycleaner/MainActivity;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 1351], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352], ["Cipher.getInstance(\"BLOWFISH", "        Cipher instance = Cipher.getInstance(\"Blowfish\");", 1352]], "Ljp/fluct/a/k$1;": [["SecureRandom(", "            instance.init((KeyManager[]) null, trustManagerArr, new SecureRandom());", 50]], "Ljp/fluct/a/k$2;": [["SecureRandom(", "            instance.init((KeyManager[]) null, trustManagerArr, new SecureRandom());", 50]], "Ljp/fluct/a/k;": [["SecureRandom(", "            instance.init((KeyManager[]) null, trustManagerArr, new SecureRandom());", 50]]}, "native_imports": []}, "a002fecefcd5e26b14e4221c1c59a2e60751034e8f9cd2a36c4e2a4267d03521": {"metadata": {"apk_path": null, "dx_path": null, "dex_year": null, "euphony_name": null, "euphony_type": null}, "third_party_crypto_libs": [], "third_party_packages": ["Landroid/support/v4", "Lcom/baidu/mobads", "Lcom/adsmogo", "Lcom/umeng/analytics", "Lcom/umeng/fb", "Lcom/umeng/update", "Lcom/umeng/common", "Lcom/android/volley", "Lcom/otomod", "Lcom/qq"], "standard_third_party_packages": ["Landroid/support/v4", "Lcom/baidu/mobads", "Lcom/adsmogo", "Lcom/umeng/analytics", "Lcom/umeng/fb", "Lcom/umeng/update", "Lcom/umeng/common", "Lcom/android/volley", "Lcom/otomod", "Lcom/qq"], "crypto_imports": {"javax.crypto.cipher": 3, "javax.crypto.spec.ivparameterspec": 1, "javax.crypto.spec.secretkeyspec": 3, "java.security.messagedigest": 2, "java.security.securerandom": 1}, "crypto_api_records": {"Lcom/baidu/mobstat/aa;": [["SecretKeySpec(", "            SecretKeySpec secretKeySpec = new SecretKeySpec(\"30212102dicudiab\".getBytes(), \"AES\");", 87], ["Cipher.getInstance(", "            Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 88], ["Cipher", "            Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 88], ["Cipher.getInstance(\"AES", "            Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 88], ["Cipher.getInstance(\"AES/CBC/PKCS5Padding", "            Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 88], ["IvParameterSpec(", "            instance.init(2, secretKeySpec, new IvParameterSpec(\"30212102dicudiab\".getBytes()));", 89], ["SecretKeySpec(", "                SecretKeySpec secretKeySpec = new SecretKeySpec(\"30212102dicudiab\".getBytes(), \"AES\");", 131], ["Cipher.getInstance(", "                Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 132], ["Cipher", "                Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 132], ["Cipher.getInstance(\"AES", "                Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 132], ["Cipher.getInstance(\"AES/CBC/PKCS5Padding", "                Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 132], ["IvParameterSpec(", "                instance.init(1, secretKeySpec, new IvParameterSpec(\"30212102dicudiab\".getBytes()));", 133]], "Lcom/baidu/mobstat/c;": [["SecretKeySpec(", "            SecretKeySpec secretKeySpec = new SecretKeySpec(\"30212102dicudiab\".getBytes(), \"AES\");", 113], ["Cipher.getInstance(", "            Cipher instance = Cipher.getInstance(\"AES\");", 114], ["Cipher", "            Cipher instance = Cipher.getInstance(\"AES\");", 114], ["Cipher.getInstance(\"AES", "            Cipher instance = Cipher.getInstance(\"AES\");", 114]], "Lcom/baidu/mobstat/s;": [["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"AES\");", 7], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");", 8], ["Cipher", "        Cipher instance = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");", 8], ["Cipher.getInstance(\"AES", "        Cipher instance = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");", 8], ["Cipher.getInstance(\"AES/ECB/PKCS5Padding", "        Cipher instance = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");", 8]], "Lcom/baidu/mobstat/y;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 8], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 8]], "Lcom/lianzainovel/util/ab;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(str2);", 12]], "Lorg/OpenUDID/a;": [["SecureRandom(", "                f = new BigInteger(64, new SecureRandom()).toString(16);", 87]]}, "native_imports": []}, "58d75f26c56e9f91b06513cf9a990289222d85641d338be6d9cb3967583d3727": {"metadata": {"apk_path": null, "dx_path": null, "dex_year": null, "euphony_name": null, "euphony_type": null}, "third_party_crypto_libs": [], "third_party_packages": ["Lcom/alipay", "Lcom/upay/billing/engine/alipay", "Lcom/upay/billing/engine/ck_mdo", "Lcom/upay/billing/engine/tenpay", "Lcom/upay/billing/engine/rdowap", "Lcom/upay/billing/engine/cmcc_mm_dj", "Lcom/upay/billing/engine/he_nc", "Lcom/upay/billing/bean"], "standard_third_party_packages": ["Lcom/alipay", "Lcom/upay/billing/engine/alipay", "Lcom/upay/billing/engine/ck_mdo", "Lcom/upay/billing/engine/tenpay", "Lcom/upay/billing/engine/rdowap", "Lcom/upay/billing/engine/cmcc_mm_dj", "Lcom/upay/billing/engine/he_nc", "Lcom/upay/billing/bean"], "crypto_imports": {"java.security.messagedigest": 4, "java.security.key": 1, "java.security.keyfactory": 1, "java.security.privatekey": 1, "java.security.publickey": 1, "java.security.signature": 1, "java.security.spec.pkcs8encodedkeyspec": 1, "java.security.spec.x509encodedkeyspec": 1}, "crypto_api_records": {"La/a/et;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 36], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 36], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 71], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 71]], "La/a/ex;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 54], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 54]], "Lcom/anrd/sysservices_t/b/c;": [["MessageDigest.getInstance(", "            java.security.MessageDigest r0 = java.security.MessageDigest.getInstance(r0)     // Catch:{ NoSuchAlgorithmException -> 0x003a }", 11]], "Lcom/heju/pay/a/c;": [["KeyFactory.getInstance(", "            PrivateKey generatePrivate = KeyFactory.getInstance(\"RSA\").generatePrivate(new PKCS8EncodedKeySpec(a.a(str2)));", 13], ["KeyFactory.getInstance(\"RSA", "            PrivateKey generatePrivate = KeyFactory.getInstance(\"RSA\").generatePrivate(new PKCS8EncodedKeySpec(a.a(str2)));", 13], ["PKCS8EncodedKeySpec", "            PrivateKey generatePrivate = KeyFactory.getInstance(\"RSA\").generatePrivate(new PKCS8EncodedKeySpec(a.a(str2)));", 13], ["Signature.getInstance(", "            Signature instance = Signature.getInstance(\"SHA1WithRSA\");", 14], ["Signature.getInstance(\"SHA1withRSA", "            Signature instance = Signature.getInstance(\"SHA1WithRSA\");", 14], ["KeyFactory.getInstance(", "            PublicKey generatePublic = KeyFactory.getInstance(\"RSA\").generatePublic(new X509EncodedKeySpec(a.a(str3)));", 26], ["KeyFactory.getInstance(\"RSA", "            PublicKey generatePublic = KeyFactory.getInstance(\"RSA\").generatePublic(new X509EncodedKeySpec(a.a(str3)));", 26], ["Signature.getInstance(", "            Signature instance = Signature.getInstance(\"SHA1WithRSA\");", 27], ["Signature.getInstance(\"SHA1withRSA", "            Signature instance = Signature.getInstance(\"SHA1WithRSA\");", 27]], "Lcom/upay/billing/utils/Util;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 521], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 521]]}, "native_imports": []}, "3d44791ccd1d5b871a1e4d4fcfc90b667f219c7979ca02d220e442552ec2b357": {"metadata": {"apk_path": null, "dx_path": null, "dex_year": null, "euphony_name": null, "euphony_type": null}, "third_party_crypto_libs": [], "third_party_packages": ["Lorg/andengine", "Lorg/xmlpull", "Lorg/kobjects", "Lorg/ksoap2", "Lorg/kxml2", "Lcom/badlogic"], "standard_third_party_packages": ["Lorg/andengine", "Lorg/xmlpull", "Lorg/kobjects", "Lorg/ksoap2", "Lorg/kxml2", "Lcom/badlogic"], "crypto_imports": {"java.security.securerandom": 1, "javax.crypto.secretkey": 5, "javax.crypto.cipher": 3, "javax.crypto.secretkeyfactory": 2, "javax.crypto.spec.pbekeyspec": 2, "javax.crypto.spec.secretkeyspec": 1, "javax.crypto.spec.pbeparameterspec": 1, "java.security.messagedigest": 1}, "crypto_api_records": {"Lcom/a/c/f;": [["SecureRandom(", "    private SecureRandom f35a = new SecureRandom();", 11]], "Lcom/a/c/a;": [["Cipher", "    Cipher f31a;", 14], ["Cipher", "    Cipher b;", 15], ["Cipher.getInstance(", "            this.f31a = Cipher.getInstance(c.getAlgorithm());", 20], ["Cipher", "            this.f31a = Cipher.getInstance(c.getAlgorithm());", 20], ["Cipher.getInstance(", "            this.b = Cipher.getInstance(c.getAlgorithm());", 21], ["Cipher", "            this.b = Cipher.getInstance(c.getAlgorithm());", 21], ["PBEKeySpec(", "            return SecretKeyFactory.getInstance(\"PBEWITHSHA256AND256BITAES-CBC-BC\").generateSecret(new PBEKeySpec(str.toCharArray(), \"A long, but constant phrase that will be used each time as the salt.\".getBytes(), 2000, 256));", 58], ["KeyFactory.getInstance(", "            return SecretKeyFactory.getInstance(\"PBEWITHSHA256AND256BITAES-CBC-BC\").generateSecret(new PBEKeySpec(str.toCharArray(), \"A long, but constant phrase that will be used each time as the salt.\".getBytes(), 2000, 256));", 58], ["generateSecret(", "            return SecretKeyFactory.getInstance(\"PBEWITHSHA256AND256BITAES-CBC-BC\").generateSecret(new PBEKeySpec(str.toCharArray(), \"A long, but constant phrase that will be used each time as the salt.\".getBytes(), 2000, 256));", 58], ["generateSecret(", "            return SecretKeyFactory.getInstance(\"PBEWITHSHA256AND256BITAES-CBC-BC\").generateSecret(new PBEKeySpec(str.toCharArray(), \"A long, but constant phrase that will be used each time as the salt.\".getBytes(), 2000, 256));", 58], ["SecretKeyFactory.getInstance(", "            return SecretKeyFactory.getInstance(\"PBEWITHSHA256AND256BITAES-CBC-BC\").generateSecret(new PBEKeySpec(str.toCharArray(), \"A long, but constant phrase that will be used each time as the salt.\".getBytes(), 2000, 256));", 58], ["SecretKeyFactory.getInstance(\"PBEwithSHA256AND256BITAES-CBC-BC", "            return SecretKeyFactory.getInstance(\"PBEWITHSHA256AND256BITAES-CBC-BC\").generateSecret(new PBEKeySpec(str.toCharArray(), \"A long, but constant phrase that will be used each time as the salt.\".getBytes(), 2000, 256));", 58]], "Lcom/a/c/d;": [["Cipher", "    Cipher f33a;", 11], ["Cipher", "    Cipher b;", 12], ["Cipher.getInstance(", "            this.f33a = Cipher.getInstance(\"Blowfish\");", 16], ["Cipher", "            this.f33a = Cipher.getInstance(\"Blowfish\");", 16], ["Cipher.getInstance(\"BLOWFISH", "            this.f33a = Cipher.getInstance(\"Blowfish\");", 16], ["Cipher.getInstance(", "            this.b = Cipher.getInstance(\"Blowfish\");", 17], ["Cipher", "            this.b = Cipher.getInstance(\"Blowfish\");", 17], ["Cipher.getInstance(\"BLOWFISH", "            this.b = Cipher.getInstance(\"Blowfish\");", 17], ["SecretKeySpec(", "            SecretKeySpec secretKeySpec = new SecretKeySpec(str.getBytes(), \"Blowfish\");", 18]], "Lcom/a/c/e;": [["Cipher", "    Cipher f34a;", 16], ["Cipher", "    Cipher b;", 17], ["Cipher.getInstance(", "            this.f34a = Cipher.getInstance(c2.getAlgorithm());", 24], ["Cipher", "            this.f34a = Cipher.getInstance(c2.getAlgorithm());", 24], ["Cipher.getInstance(", "            this.b = Cipher.getInstance(c2.getAlgorithm());", 25], ["Cipher", "            this.b = Cipher.getInstance(c2.getAlgorithm());", 25], ["PBEParameterSpec(", "            PBEParameterSpec pBEParameterSpec = new PBEParameterSpec(this.c, this.d);", 45], ["PBEKeySpec(", "            return SecretKeyFactory.getInstance(\"PBEWithMD5AndDES\").generateSecret(new PBEKeySpec(str.toCharArray(), this.c, this.d));", 67], ["KeyFactory.getInstance(", "            return SecretKeyFactory.getInstance(\"PBEWithMD5AndDES\").generateSecret(new PBEKeySpec(str.toCharArray(), this.c, this.d));", 67], ["generateSecret(", "            return SecretKeyFactory.getInstance(\"PBEWithMD5AndDES\").generateSecret(new PBEKeySpec(str.toCharArray(), this.c, this.d));", 67], ["generateSecret(", "            return SecretKeyFactory.getInstance(\"PBEWithMD5AndDES\").generateSecret(new PBEKeySpec(str.toCharArray(), this.c, this.d));", 67], ["SecretKeyFactory.getInstance(", "            return SecretKeyFactory.getInstance(\"PBEWithMD5AndDES\").generateSecret(new PBEKeySpec(str.toCharArray(), this.c, this.d));", 67], ["SecretKeyFactory.getInstance(\"PBEwithMD5ANDDES", "            return SecretKeyFactory.getInstance(\"PBEWithMD5AndDES\").generateSecret(new PBEKeySpec(str.toCharArray(), this.c, this.d));", 67]], "Lcom/a/c/i;": [["MessageDigest.getInstance(", "            this.f37a = MessageDigest.getInstance(\"SHA-256\");", 11], ["MessageDigest.getInstance(\"SHA-256", "            this.f37a = MessageDigest.getInstance(\"SHA-256\");", 11]]}, "native_imports": []}, "d9e5c58dced69e209b5fc8721cc249ef3cd8b9f425469a3d8e3a1c829b0932a9": {"metadata": {"apk_path": null, "dx_path": null, "dex_year": null, "euphony_name": null, "euphony_type": null}, "third_party_crypto_libs": [], "third_party_packages": ["Lcn/domob", "Lcom/loopj", "Lcom/tencent/mobwin", "Lcom/mobisage/android", "Lcom/tencent/lbsapi", "Lcom/mobisage/sns", "Lcom/qq"], "standard_third_party_packages": ["Lcn/domob", "Lcom/loopj", "Lcom/tencent/mobwin", "Lcom/mobisage/android", "Lcom/tencent/lbsapi", "Lcom/mobisage/sns", "Lcom/qq"], "crypto_imports": {"javax.crypto.cipher": 23, "javax.crypto.secretkeyfactory": 21, "javax.crypto.secretkey": 21, "javax.crypto.spec.deskeyspec": 21, "javax.crypto.spec.ivparameterspec": 21, "java.security.messagedigest": 5, "javax.crypto.spec.secretkeyspec": 2}, "crypto_api_records": {"Lcom/Ninder/gotop/NinderAlmr$1;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 234], ["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["IvParameterSpec(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["KeyFactory.getInstance(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["generateSecret(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["Cipher", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["generateSecret(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["SecretKeyFactory.getInstance(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["Cipher", "        return cipher.doFinal(message.getBytes(\"UTF-8\"));", 248]], "Lcom/Ninder/gotop/NinderAlmr$2;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 234], ["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["IvParameterSpec(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["KeyFactory.getInstance(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["generateSecret(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["Cipher", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["generateSecret(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["SecretKeyFactory.getInstance(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["Cipher", "        return cipher.doFinal(message.getBytes(\"UTF-8\"));", 248]], "Lcom/Ninder/gotop/NinderAlmr$3;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 234], ["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["IvParameterSpec(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["KeyFactory.getInstance(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["generateSecret(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["Cipher", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["generateSecret(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["SecretKeyFactory.getInstance(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["Cipher", "        return cipher.doFinal(message.getBytes(\"UTF-8\"));", 248]], "Lcom/Ninder/gotop/NinderAlmr$4;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 234], ["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["IvParameterSpec(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["KeyFactory.getInstance(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["generateSecret(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["Cipher", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["generateSecret(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["SecretKeyFactory.getInstance(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["Cipher", "        return cipher.doFinal(message.getBytes(\"UTF-8\"));", 248]], "Lcom/Ninder/gotop/NinderAlmr;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 232], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 233], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 234], ["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 246], ["IvParameterSpec(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["KeyFactory.getInstance(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["generateSecret(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["Cipher", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["generateSecret(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["SecretKeyFactory.getInstance(", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(1, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 247], ["Cipher", "        return cipher.doFinal(message.getBytes(\"UTF-8\"));", 248]], "Lcom/Ninder/gotop/NinderBzscos$1;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 165], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 165], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 165], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 165], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 167]], "Lcom/Ninder/gotop/NinderBzscos;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 165], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 165], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 165], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 165], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 166], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 167]], "Lcom/Ninder/gotop/NinderBzsr$1;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 176], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 176], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 176], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 176], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 178]], "Lcom/Ninder/gotop/NinderBzsr;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 176], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 176], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 176], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 176], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 177], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 178]], "Lcom/Ninder/gotop/NinderPays$1;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 389]], "Lcom/Ninder/gotop/NinderPays$2;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 389]], "Lcom/Ninder/gotop/NinderPays$3;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 389]], "Lcom/Ninder/gotop/NinderPays$4;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 389]], "Lcom/Ninder/gotop/NinderPays;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 387], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 388], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 389]], "Lcom/Ninder/gotop/NinderStater$1;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 164], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 164], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 164], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 164], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 166]], "Lcom/Ninder/gotop/NinderStater$2;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 164], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 164], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 164], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 164], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 166]], "Lcom/Ninder/gotop/NinderStater;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 164], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 164], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 164], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 164], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 165], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 166]], "Lcom/Ninder/gotop/Nindergwdo$1;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 128]], "Lcom/Ninder/gotop/Nindergwdo$2;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 128]], "Lcom/Ninder/gotop/Nindergwdo$3;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 128]], "Lcom/Ninder/gotop/Nindergwdo;": [["Cipher.getInstance(", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["Cipher", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["Cipher.getInstance(\"DES", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 126], ["IvParameterSpec(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["KeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["Cipher", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["generateSecret(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["SecretKeyFactory.getInstance(", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["SecretKeyFactory.getInstance(\"DES", "        cipher.init(2, SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(key.getBytes(\"UTF-8\"))), new IvParameterSpec(key.getBytes(\"UTF-8\")));", 127], ["Cipher", "        return new String(cipher.doFinal(bytesrc));", 128]], "Lcom/admogo/AdsMOGOAction$1;": [["MessageDigest.getInstance(", "            java.security.MessageDigest r3 = java.security.MessageDigest.getInstance(r6)     // Catch:{ NoSuchAlgorithmException -> 0x005b }", 104]], "Lcom/admogo/AdsMOGOAction;": [["MessageDigest.getInstance(", "            java.security.MessageDigest r3 = java.security.MessageDigest.getInstance(r6)     // Catch:{ NoSuchAlgorithmException -> 0x005b }", 104]], "Lcom/admogo/CryptUtils;": [["SecretKeySpec(", "            SecretKeySpec key = new SecretKeySpec(password.getBytes(), \"DES\");", 15], ["Cipher.getInstance(", "            Cipher cipher = Cipher.getInstance(\"DES\");", 16], ["Cipher", "            Cipher cipher = Cipher.getInstance(\"DES\");", 16], ["Cipher.getInstance(\"DES", "            Cipher cipher = Cipher.getInstance(\"DES\");", 16], ["Cipher", "            cipher.init(1, key);", 18], ["Cipher", "            return cipher.doFinal(byteContent);", 19], ["SecretKeySpec(", "            SecretKeySpec key = new SecretKeySpec(password.getBytes(), \"DES\");", 42], ["Cipher.getInstance(", "            Cipher cipher = Cipher.getInstance(\"DES\");", 43], ["Cipher", "            Cipher cipher = Cipher.getInstance(\"DES\");", 43], ["Cipher.getInstance(\"DES", "            Cipher cipher = Cipher.getInstance(\"DES\");", 43], ["Cipher", "            cipher.init(2, key);", 45], ["Cipher", "            return cipher.doFinal(byteContent);", 46]], "Lcom/admogo/encryption/CryptUtils;": [["SecretKeySpec(", "            SecretKeySpec key = new SecretKeySpec(password.getBytes(), \"DES\");", 15], ["Cipher.getInstance(", "            Cipher cipher = Cipher.getInstance(\"DES\");", 16], ["Cipher", "            Cipher cipher = Cipher.getInstance(\"DES\");", 16], ["Cipher.getInstance(\"DES", "            Cipher cipher = Cipher.getInstance(\"DES\");", 16], ["Cipher", "            cipher.init(1, key);", 18], ["Cipher", "            return cipher.doFinal(byteContent);", 19], ["SecretKeySpec(", "            SecretKeySpec key = new SecretKeySpec(password.getBytes(), \"DES\");", 42], ["Cipher.getInstance(", "            Cipher cipher = Cipher.getInstance(\"DES\");", 43], ["Cipher", "            Cipher cipher = Cipher.getInstance(\"DES\");", 43], ["Cipher.getInstance(\"DES", "            Cipher cipher = Cipher.getInstance(\"DES\");", 43], ["Cipher", "            cipher.init(2, key);", 45], ["Cipher", "            return cipher.doFinal(byteContent);", 46]], "Lcom/admogo/encryption/MD5;": [["MessageDigest.getInstance(", "                return byteArrayToHexString(MessageDigest.getInstance(\"MD5\").digest(resultString2.getBytes()));", 29], ["MessageDigest.getInstance(\"MD5", "                return byteArrayToHexString(MessageDigest.getInstance(\"MD5\").digest(resultString2.getBytes()));", 29]], "Lcom/admogo/encryption/SHA1;": [["MessageDigest.getInstance(", "            MessageDigest md = MessageDigest.getInstance(\"sha-1\");", 7], ["MessageDigest.getInstance(\"SHA-1", "            MessageDigest md = MessageDigest.getInstance(\"sha-1\");", 7]], "Lcom/admogo/util/AdMogoUtil;": [["MessageDigest.getInstance(", "            java.security.MessageDigest r3 = java.security.MessageDigest.getInstance(r6)     // Catch:{ NoSuchAlgorithmException -> 0x005b }", 113]]}, "native_imports": []}, "f26a759ff6b136ba291494b0cbf42f06b240092662ab78d2f7d6369d685b5a4a": {"metadata": {"apk_path": null, "dx_path": null, "dex_year": null, "euphony_name": null, "euphony_type": null}, "third_party_crypto_libs": [], "third_party_packages": ["Lcn/domob", "Lcom/adwo/adsdk", "Lcom/mobclick/android", "Lcom/adsmogo", "Lorg/apache/log4j", "Lcn/hongxiu", "Lcom/PushService", "Lcom/taobao/api", "Lcom/adview", "Lcom/hdtmobile", "Lcom/gsmob/android/image", "Lcom/feedback"], "standard_third_party_packages": ["Lcn/domob", "Lcom/adwo/adsdk", "Lcom/mobclick/android", "Lcom/adsmogo", "Lorg/apache/log4j", "Lcn/hongxiu", "Lcom/PushService", "Lcom/taobao/api", "Lcom/adview", "Lcom/hdtmobile", "Lcom/gsmob/android/image", "Lcom/feedback"], "crypto_imports": {"java.security.messagedigest": 3, "javax.crypto.cipher": 2, "javax.crypto.spec.ivparameterspec": 2, "javax.crypto.spec.secretkeyspec": 2}, "crypto_api_records": {"Lcom/a/d;": [["MessageDigest.getInstance(", "            return a(MessageDigest.getInstance(\"MD5\").digest(bArr));", 313], ["MessageDigest.getInstance(\"MD5", "            return a(MessageDigest.getInstance(\"MD5\").digest(bArr));", 313]], "Lcom/baidu/w;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 1037], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 1037]], "Lcom/gsmob/android/ads/B;": [["IvParameterSpec(", "        IvParameterSpec ivParameterSpec = new IvParameterSpec(a);", 13], ["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str2.getBytes(), \"DES\");", 14], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 15], ["Cipher", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 15], ["Cipher.getInstance(\"DES", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 15], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 15], ["IvParameterSpec(", "        IvParameterSpec ivParameterSpec = new IvParameterSpec(a);", 22], ["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str2.getBytes(), \"DES\");", 23], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 24], ["Cipher", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 24], ["Cipher.getInstance(\"DES", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 24], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 24]], "Lcom/gsmob/android/ads/b;": [["IvParameterSpec(", "        IvParameterSpec ivParameterSpec = new IvParameterSpec(a);", 13], ["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str2.getBytes(), \"DES\");", 14], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 15], ["Cipher", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 15], ["Cipher.getInstance(\"DES", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 15], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 15], ["IvParameterSpec(", "        IvParameterSpec ivParameterSpec = new IvParameterSpec(a);", 22], ["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(str2.getBytes(), \"DES\");", 23], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 24], ["Cipher", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 24], ["Cipher.getInstance(\"DES", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 24], ["Cipher.getInstance(\"DES/CBC/PKCS5Padding", "        Cipher instance = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");", 24]], "Lcom/gsmob/android/ads/s;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 64], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 64]]}, "native_imports": []}, "0d9e99e79d9a04e41da65fed037b8560612c12d55958166427557f78bc887585": {"metadata": {"apk_path": null, "dx_path": null, "dex_year": null, "euphony_name": null, "euphony_type": null}, "third_party_crypto_libs": [], "third_party_packages": ["Lcom/google/gson", "Lcom/alipay", "Lcom/tencent/mm", "Lorg/json", "Lcom/skymobi/pay/maxture", "Lcom/d/a/b"], "standard_third_party_packages": ["Lcom/google/gson", "Lcom/alipay", "Lcom/tencent/mm", "Lorg/json", "Lcom/skymobi/pay/maxture", "Lcom/ta/utdid2/c"], "crypto_imports": {"javax.crypto.cipher": 8, "javax.crypto.secretkey": 2, "java.security.key": 10, "java.security.keyfactory": 3, "java.security.keypair": 4, "java.security.keypairgenerator": 2, "java.security.interfaces.rsaprivatekey": 2, "java.security.interfaces.rsapublickey": 2, "java.security.spec.rsaprivatekeyspec": 2, "java.security.spec.rsapublickeyspec": 2, "java.security.messagedigest": 13, "java.security.securerandom": 3, "javax.crypto.keygenerator": 1, "javax.crypto.spec.ivparameterspec": 2, "javax.crypto.spec.secretkeyspec": 4, "javax.crypto.mac": 1, "java.security.privatekey": 1, "java.security.signature": 1, "java.security.spec.pkcs8encodedkeyspec": 1}, "crypto_api_records": {"Lcom/bdag/not/local/Ee;": [["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(secretKey.getAlgorithm());", 12], ["Cipher", "        Cipher instance = Cipher.getInstance(secretKey.getAlgorithm());", 12], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(secretKey.getAlgorithm());", 19], ["Cipher", "        Cipher instance = Cipher.getInstance(secretKey.getAlgorithm());", 19], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(secretKey.getAlgorithm());", 25], ["Cipher", "        Cipher instance = Cipher.getInstance(secretKey.getAlgorithm());", 25]], "Lcom/bdag/not/local/Rr;": [["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 64], ["Cipher", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 64], ["Cipher.getInstance(\"RSA", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 64], ["Cipher.getInstance(\"RSA/NONE/PKCS1Padding", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 64], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 82], ["Cipher", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 82], ["Cipher.getInstance(\"RSA", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 82], ["Cipher.getInstance(\"RSA/NONE/PKCS1Padding", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 82], ["KeyPairGenerator.getInstance(", "        KeyPairGenerator instance = KeyPairGenerator.getInstance(TreasureCon.ALGORITHM);", 94], ["KeyPair(", "        KeyPair generateKeyPair = instance.generateKeyPair();", 96], ["KeyFactory.getInstance(", "            return (RSAPrivateKey) KeyFactory.getInstance(TreasureCon.ALGORITHM).generatePrivate(new RSAPrivateKeySpec(new BigInteger(str), new BigInteger(str2)));", 104], ["RSAPublicKeySpec(", "            return (RSAPublicKey) KeyFactory.getInstance(TreasureCon.ALGORITHM).generatePublic(new RSAPublicKeySpec(new BigInteger(str), new BigInteger(str2)));", 113], ["KeyFactory.getInstance(", "            return (RSAPublicKey) KeyFactory.getInstance(TreasureCon.ALGORITHM).generatePublic(new RSAPublicKeySpec(new BigInteger(str), new BigInteger(str2)));", 113]], "Lcom/bdag/not/local/U$1;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 457], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 457]], "Lcom/bdag/not/local/U;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 457], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 457]], "Lcom/d/a/a/a/a;": [["SecretKeySpec(", "            SecretKeySpec secretKeySpec = new SecretKeySpec(a2, \"AES\");", 15], ["Cipher.getInstance(", "            Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 16], ["Cipher", "            Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 16], ["Cipher.getInstance(\"AES", "            Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 16], ["Cipher.getInstance(\"AES/CBC/PKCS5Padding", "            Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 16], ["IvParameterSpec(", "            instance.init(1, secretKeySpec, new IvParameterSpec(new byte[instance.getBlockSize()]));", 17], ["KeyGenerator.getInstance(", "        KeyGenerator instance = KeyGenerator.getInstance(\"AES\");", 30], ["KeyGenerator.getInstance(\"AES", "        KeyGenerator instance = KeyGenerator.getInstance(\"AES\");", 30], ["SecureRandom.getInstance(", "        SecureRandom instance2 = SecureRandom.getInstance(\"SHA1PRNG\", \"Crypto\");", 31], ["SecureRandom.getInstance(\"SHA1PRNG", "        SecureRandom instance2 = SecureRandom.getInstance(\"SHA1PRNG\", \"Crypto\");", 31], ["setSeed(", "        instance2.setSeed(bArr);", 32], ["generateKey(", "        return instance.generateKey().getEncoded();", 34], ["SecretKeySpec(", "            SecretKeySpec secretKeySpec = new SecretKeySpec(a2, \"AES\");", 45], ["Cipher.getInstance(", "            Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 46], ["Cipher", "            Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 46], ["Cipher.getInstance(\"AES", "            Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 46], ["Cipher.getInstance(\"AES/CBC/PKCS5Padding", "            Cipher instance = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");", 46], ["IvParameterSpec(", "            instance.init(2, secretKeySpec, new IvParameterSpec(new byte[instance.getBlockSize()]));", 47]], "Lcom/d/a/c/d;": [["Mac.getInstance(", "        Mac instance = Mac.getInstance(\"HmacSHA1\");", 94], ["Mac.getInstance(\"HmacSHA1", "        Mac instance = Mac.getInstance(\"HmacSHA1\");", 94], ["SecretKeySpec(", "        instance.init(new SecretKeySpec(\"d6fc3a4a06adbde89223bvefedc24fecde188aaa9161\".getBytes(), instance.getAlgorithm()));", 95]], "Lcom/fbvv/joker/utra/U$1;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 414], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 414]], "Lcom/fbvv/joker/utra/U;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 414], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 414]], "Lcom/jmedia/c/a;": [["SecretKeySpec(", "            SecretKeySpec secretKeySpec = new SecretKeySpec(new SecretKeySpec(a.a.a.a.a(str.getBytes()), \"AES\").getEncoded(), \"AES\");", 20], ["Cipher.getInstance(", "            Cipher instance = Cipher.getInstance(\"AES\");", 21], ["Cipher", "            Cipher instance = Cipher.getInstance(\"AES\");", 21], ["Cipher.getInstance(\"AES", "            Cipher instance = Cipher.getInstance(\"AES\");", 21], ["Cipher", "            CipherOutputStream cipherOutputStream = new CipherOutputStream(fileOutputStream, instance);", 23], ["CipherOutputStream(", "            CipherOutputStream cipherOutputStream = new CipherOutputStream(fileOutputStream, instance);", 23], ["Cipher", "                    cipherOutputStream.close();", 28], ["Cipher", "                cipherOutputStream.write(bArr, 0, read);", 33], ["Cipher", "                cipherOutputStream.flush();", 34]], "Lcom/jmedia/f/h;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 13], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 13]], "Lcom/jmedia/f/k;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 47], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 47]], "Lcom/pay/i/c;": [["KeyFactory.getInstance(", "            PrivateKey generatePrivate = KeyFactory.getInstance(TreasureCon.ALGORITHM).generatePrivate(new PKCS8EncodedKeySpec(a.a(str2)));", 11], ["PKCS8EncodedKeySpec", "            PrivateKey generatePrivate = KeyFactory.getInstance(TreasureCon.ALGORITHM).generatePrivate(new PKCS8EncodedKeySpec(a.a(str2)));", 11], ["Signature.getInstance(", "            Signature instance = Signature.getInstance(TreasureCon.SIGN_ALGORITHMS);", 12]], "Lcom/pay/j/d;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 13], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 13]], "Lcom/refet/an02/local/Ee;": [["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(secretKey.getAlgorithm());", 14], ["Cipher", "        Cipher instance = Cipher.getInstance(secretKey.getAlgorithm());", 14], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(secretKey.getAlgorithm());", 22], ["Cipher", "        Cipher instance = Cipher.getInstance(secretKey.getAlgorithm());", 22], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(secretKey.getAlgorithm());", 28], ["Cipher", "        Cipher instance = Cipher.getInstance(secretKey.getAlgorithm());", 28]], "Lcom/refet/an02/local/Rr;": [["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 64], ["Cipher", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 64], ["Cipher.getInstance(\"RSA", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 64], ["Cipher.getInstance(\"RSA/NONE/PKCS1Padding", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 64], ["Cipher.getInstance(", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 82], ["Cipher", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 82], ["Cipher.getInstance(\"RSA", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 82], ["Cipher.getInstance(\"RSA/NONE/PKCS1Padding", "        Cipher instance = Cipher.getInstance(\"RSA/None/PKCS1Padding\");", 82], ["KeyPairGenerator.getInstance(", "        KeyPairGenerator instance = KeyPairGenerator.getInstance(TreasureCon.ALGORITHM);", 94], ["KeyPair(", "        KeyPair generateKeyPair = instance.generateKeyPair();", 96], ["KeyFactory.getInstance(", "            return (RSAPrivateKey) KeyFactory.getInstance(TreasureCon.ALGORITHM).generatePrivate(new RSAPrivateKeySpec(new BigInteger(str), new BigInteger(str2)));", 104], ["RSAPublicKeySpec(", "            return (RSAPublicKey) KeyFactory.getInstance(TreasureCon.ALGORITHM).generatePublic(new RSAPublicKeySpec(new BigInteger(str), new BigInteger(str2)));", 113], ["KeyFactory.getInstance(", "            return (RSAPublicKey) KeyFactory.getInstance(TreasureCon.ALGORITHM).generatePublic(new RSAPublicKeySpec(new BigInteger(str), new BigInteger(str2)));", 113]], "Lcom/refet/an02/local/U$1;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 519], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 519]], "Lcom/refet/an02/local/U;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 519], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 519]], "Lcom/skymobi/pay/sdk/normal/zimon/util/j;": [["MessageDigest.getInstance(", "            return MessageDigest.getInstance(\"MD5\");", 43], ["MessageDigest.getInstance(\"MD5", "            return MessageDigest.getInstance(\"MD5\");", 43]], "Lcom/sooying/utils/AESUtils;": [["SecretKeySpec(", "        return new SecretKeySpec(bArr, ENCRYPT_ALGORITHM);", 28], ["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(key.getEncoded(), ENCRYPT_ALGORITHM);", 35], ["Cipher.getInstance(", "        Cipher instance2 = Cipher.getInstance(ENCRYPT_ALGORITHM_PATTERN);", 36], ["Cipher", "        Cipher instance2 = Cipher.getInstance(ENCRYPT_ALGORITHM_PATTERN);", 36], ["IvParameterSpec(", "        instance2.init(2, secretKeySpec, new IvParameterSpec(ENCRYPT_VECTOR.getBytes(\"UTF-8\")));", 37], ["SecretKeySpec(", "        SecretKeySpec secretKeySpec = new SecretKeySpec(key.getEncoded(), ENCRYPT_ALGORITHM);", 42], ["Cipher.getInstance(", "        Cipher instance2 = Cipher.getInstance(ENCRYPT_ALGORITHM_PATTERN);", 43], ["Cipher", "        Cipher instance2 = Cipher.getInstance(ENCRYPT_ALGORITHM_PATTERN);", 43], ["IvParameterSpec(", "        instance2.init(1, secretKeySpec, new IvParameterSpec(ENCRYPT_VECTOR.getBytes(\"UTF-8\")));", 44]], "Lcom/sy/encr/MD5Utils;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 11], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 11]], "Ldick/com/encryption/MD5Utils;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 11], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 11]], "Lnet/sourceforge/simcpux/a;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 8], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 8]]}, "native_imports": []}, "9fb6230d41fa2a9c7b89d61ab61e77079dd415b481810f320aa267758ced59e9": {"metadata": {"apk_path": null, "dx_path": null, "dex_year": null, "euphony_name": null, "euphony_type": null}, "third_party_crypto_libs": [], "third_party_packages": ["Lcom/startapp", "Landroid/support/v4"], "standard_third_party_packages": ["Lcom/startapp", "Landroid/support/v4"], "crypto_imports": {"java.security.messagedigest": 7}, "crypto_api_records": {"Lbc;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 49], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 49]], "Lbd$1;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 59], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 59], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"SHA-1\");", 80], ["MessageDigest.getInstance(\"SHA-1", "            MessageDigest instance = MessageDigest.getInstance(\"SHA-1\");", 80]], "Lbd$a;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 59], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 59], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"SHA-1\");", 80], ["MessageDigest.getInstance(\"SHA-1", "            MessageDigest instance = MessageDigest.getInstance(\"SHA-1\");", 80]], "Lbd;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 59], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 59], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"SHA-1\");", 80], ["MessageDigest.getInstance(\"SHA-1", "            MessageDigest instance = MessageDigest.getInstance(\"SHA-1\");", 80]], "Lbe$a;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 181], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 181], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"SHA-1\");", 200], ["MessageDigest.getInstance(\"SHA-1", "            MessageDigest instance = MessageDigest.getInstance(\"SHA-1\");", 200], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 400], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 400]], "Lbe;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 181], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 181], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"SHA-1\");", 200], ["MessageDigest.getInstance(\"SHA-1", "            MessageDigest instance = MessageDigest.getInstance(\"SHA-1\");", 200], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 400], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 400]], "Lcom/searchboxsdk/android/util/f;": [["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"SHA-1\");", 10], ["MessageDigest.getInstance(\"SHA-1", "            MessageDigest instance = MessageDigest.getInstance(\"SHA-1\");", 10]]}, "native_imports": []}, "63890df926f97eb10370a0fb5f667ce9610887128a8cc69e0e53c57ffe06c05d": {"metadata": {"apk_path": null, "dx_path": null, "dex_year": null, "euphony_name": null, "euphony_type": null}, "third_party_crypto_libs": [], "third_party_packages": [], "standard_third_party_packages": [], "crypto_imports": {"java.security.messagedigest": 10, "java.security.securerandom": 19, "java.security.key": 37, "java.security.keyfactory": 6, "java.security.publickey": 7, "java.security.interfaces.rsakey": 2, "java.security.spec.rsapublickeyspec": 3, "java.security.privatekey": 8, "javax.crypto.mac": 36, "javax.crypto.spec.secretkeyspec": 8, "javax.crypto.cipher": 1, "javax.crypto.keyagreement": 1, "javax.crypto.interfaces.dhpublickey": 2, "javax.crypto.spec.dhpublickeyspec": 3, "java.security.keypair": 4, "java.security.keypairgenerator": 3, "java.security.interfaces.rsapublickey": 2, "javax.crypto.spec.dhparameterspec": 1}, "crypto_api_records": {"Lbv;": [["SecureRandom(", "            SecureRandom secureRandom = new SecureRandom();", 95], ["MessageDigest.getInstance(", "            this.d = MessageDigest.getInstance(\"MD5\");", 96], ["MessageDigest.getInstance(\"MD5", "            this.d = MessageDigest.getInstance(\"MD5\");", 96]], "Lbr;": [["MessageDigest.getInstance(", "            return a(MessageDigest.getInstance(\"MD5\").digest((String.valueOf(this.d) + str).getBytes(\"iso-8859-1\")));", 114], ["MessageDigest.getInstance(\"MD5", "            return a(MessageDigest.getInstance(\"MD5\").digest((String.valueOf(this.d) + str).getBytes(\"iso-8859-1\")));", 114]], "LbR;": [["MessageDigest.getInstance(", "            return a(MessageDigest.getInstance(\"MD5\").digest((String.valueOf(this.d) + str).getBytes(\"iso-8859-1\")));", 114], ["MessageDigest.getInstance(\"MD5", "            return a(MessageDigest.getInstance(\"MD5\").digest((String.valueOf(this.d) + str).getBytes(\"iso-8859-1\")));", 114]], "LbV;": [["SecureRandom(", "            SecureRandom secureRandom = new SecureRandom();", 95], ["MessageDigest.getInstance(", "            this.d = MessageDigest.getInstance(\"MD5\");", 96], ["MessageDigest.getInstance(\"MD5", "            this.d = MessageDigest.getInstance(\"MD5\");", 96]], "Lgd;": [["KeyFactory.getInstance(", "        return (publicKey instanceof RSAKey ? ((RSAKey) publicKey).getModulus() : ((RSAPublicKeySpec) KeyFactory.getInstance(\"RSA\").getKeySpec(publicKey, RSAPublicKeySpec.class)).getModulus()).bitLength();", 62], ["KeyFactory.getInstance(\"RSA", "        return (publicKey instanceof RSAKey ? ((RSAKey) publicKey).getModulus() : ((RSAPublicKeySpec) KeyFactory.getInstance(\"RSA\").getKeySpec(publicKey, RSAPublicKeySpec.class)).getModulus()).bitLength();", 62], ["getKeySpec(", "        return (publicKey instanceof RSAKey ? ((RSAKey) publicKey).getModulus() : ((RSAPublicKeySpec) KeyFactory.getInstance(\"RSA\").getKeySpec(publicKey, RSAPublicKeySpec.class)).getModulus()).bitLength();", 62], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 122], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 122], ["MessageDigest.getInstance(", "            MessageDigest instance2 = MessageDigest.getInstance(\"SHA-1\");", 123], ["MessageDigest.getInstance(\"SHA-1", "            MessageDigest instance2 = MessageDigest.getInstance(\"SHA-1\");", 123]], "Lgc;": [["MessageDigest.getInstance(", "            a = MessageDigest.getInstance(\"MD5\");", 22], ["MessageDigest.getInstance(\"MD5", "            a = MessageDigest.getInstance(\"MD5\");", 22], ["MessageDigest.getInstance(", "            b = MessageDigest.getInstance(\"SHA-1\");", 23], ["MessageDigest.getInstance(\"SHA-1", "            b = MessageDigest.getInstance(\"SHA-1\");", 23]], "LgD;": [["KeyFactory.getInstance(", "        return (publicKey instanceof RSAKey ? ((RSAKey) publicKey).getModulus() : ((RSAPublicKeySpec) KeyFactory.getInstance(\"RSA\").getKeySpec(publicKey, RSAPublicKeySpec.class)).getModulus()).bitLength();", 62], ["KeyFactory.getInstance(\"RSA", "        return (publicKey instanceof RSAKey ? ((RSAKey) publicKey).getModulus() : ((RSAPublicKeySpec) KeyFactory.getInstance(\"RSA\").getKeySpec(publicKey, RSAPublicKeySpec.class)).getModulus()).bitLength();", 62], ["getKeySpec(", "        return (publicKey instanceof RSAKey ? ((RSAKey) publicKey).getModulus() : ((RSAPublicKeySpec) KeyFactory.getInstance(\"RSA\").getKeySpec(publicKey, RSAPublicKeySpec.class)).getModulus()).bitLength();", 62], ["MessageDigest.getInstance(", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 122], ["MessageDigest.getInstance(\"MD5", "            MessageDigest instance = MessageDigest.getInstance(\"MD5\");", 122], ["MessageDigest.getInstance(", "            MessageDigest instance2 = MessageDigest.getInstance(\"SHA-1\");", 123], ["MessageDigest.getInstance(\"SHA-1", "            MessageDigest instance2 = MessageDigest.getInstance(\"SHA-1\");", 123]], "Lgp;": [["Mac.getInstance(", "            d = Mac.getInstance(\"HmacMD5\");", 20], ["Mac.getInstance(\"HmacMD5", "            d = Mac.getInstance(\"HmacMD5\");", 20], ["Mac.getInstance(", "            f = Mac.getInstance(\"HmacSHA1\");", 21], ["Mac.getInstance(\"HmacSHA1", "            f = Mac.getInstance(\"HmacSHA1\");", 21], ["MessageDigest.getInstance(", "                a = MessageDigest.getInstance(\"MD5\");", 25], ["MessageDigest.getInstance(\"MD5", "                a = MessageDigest.getInstance(\"MD5\");", 25], ["MessageDigest.getInstance(", "                b = MessageDigest.getInstance(\"SHA-1\");", 26], ["MessageDigest.getInstance(\"SHA-1", "                b = MessageDigest.getInstance(\"SHA-1\");", 26]], "Lgv;": [["Cipher", "    public String[] getEnabledCipherSuites() {", 122], ["Cipher", "    public String[] getSupportedCipherSuites() {", 142], ["Cipher", "    public void setEnabledCipherSuites(String[] strArr) {", 170]], "Lgy;": [["Cipher", "                this.l.println(\"  cipher name: \" + heVar.getCipherSuite());", 52], ["Cipher", "                throw new C0167gf((byte) 80, new SSLProtocolException(\"The ciphered data increased more than on 1024 bytes\"));", 108], ["Cipher", "                this.l.println(\"SSLRecordProtocol.wrap: TLSCiphertext.fragment[\" + bArr2.length + \"]:\");", 110], ["Cipher", "            this.l.println(\"SSLRecordProtocol.getChangeCipherSpecMesage\");", 135], ["Cipher", "            this.l.println(\"TLSCiphertext.fragment[\" + j2 + \"]: ...\");", 207], ["Cipher", "                    this.l.println(\"TLSCiphertext.unwrap: APP DATA[\" + j2 + \"]:\");", 243]], "Lgz;": [["Cipher", "    public String[] getDefaultCipherSuites() {", 56], ["Cipher", "    public String[] getSupportedCipherSuites() {", 60]], "LgC;": [["MessageDigest.getInstance(", "            a = MessageDigest.getInstance(\"MD5\");", 22], ["MessageDigest.getInstance(\"MD5", "            a = MessageDigest.getInstance(\"MD5\");", 22], ["MessageDigest.getInstance(", "            b = MessageDigest.getInstance(\"SHA-1\");", 23], ["MessageDigest.getInstance(\"SHA-1", "            b = MessageDigest.getInstance(\"SHA-1\");", 23]], "LgP;": [["Mac.getInstance(", "            d = Mac.getInstance(\"HmacMD5\");", 20], ["Mac.getInstance(\"HmacMD5", "            d = Mac.getInstance(\"HmacMD5\");", 20], ["Mac.getInstance(", "            f = Mac.getInstance(\"HmacSHA1\");", 21], ["Mac.getInstance(\"HmacSHA1", "            f = Mac.getInstance(\"HmacSHA1\");", 21], ["MessageDigest.getInstance(", "                a = MessageDigest.getInstance(\"MD5\");", 25], ["MessageDigest.getInstance(\"MD5", "                a = MessageDigest.getInstance(\"MD5\");", 25], ["MessageDigest.getInstance(", "                b = MessageDigest.getInstance(\"SHA-1\");", 26], ["MessageDigest.getInstance(\"SHA-1", "                b = MessageDigest.getInstance(\"SHA-1\");", 26]], "Lho;": [["Cipher.getInstance(", "                                    Cipher instance3 = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 161], ["Cipher", "                                    Cipher instance3 = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 161], ["Cipher.getInstance(\"RSA", "                                    Cipher instance3 = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 161], ["Cipher.getInstance(\"RSA/ECB/PKCS1Padding", "                                    Cipher instance3 = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");", 161], ["KeyFactory.getInstance(", "                                    instance = KeyFactory.getInstance(\"DH\");", 181], ["KeyFactory.getInstance(", "                                    instance = KeyFactory.getInstance(\"DiffieHellman\");", 183], ["KeyFactory.getInstance(\"DiffieHellman", "                                    instance = KeyFactory.getInstance(\"DiffieHellman\");", 183], ["KeyAgreement.getInstance(", "                                    instance2 = KeyAgreement.getInstance(\"DH\");", 186], ["KeyAgreement.getInstance(", "                                    instance2 = KeyAgreement.getInstance(\"DiffieHellman\");", 188], ["KeyAgreement.getInstance(\"DiffieHellman", "                                    instance2 = KeyAgreement.getInstance(\"DiffieHellman\");", 188], ["DHPublicKeySpec(", "                                    PublicKey generatePublic = instance.generatePublic(new DHPublicKeySpec(new BigInteger(1, this.k.a), this.z.e, this.z.f));", 191], ["generateSecret(", "                                    this.t = instance2.generateSecret();", 194], ["generateSecret(", "                                    this.t = instance2.generateSecret();", 194], ["KeyPairGenerator.getInstance(", "            java.security.KeyPairGenerator r53 = java.security.KeyPairGenerator.getInstance(r0)     // Catch:{ Exception -> 0x045f }", 600], ["KeyPair(", "            java.security.KeyPair r24 = r14.genKeyPair()     // Catch:{ Exception -> 0x054d }", 612], ["KeyPairGenerator.getInstance(", "            java.security.KeyPairGenerator r50 = java.security.KeyPairGenerator.getInstance(r0)     // Catch:{ NoSuchAlgorithmException -> 0x0455 }", 774], ["KeyPairGenerator.getInstance(", "            java.security.KeyPairGenerator r44 = java.security.KeyPairGenerator.getInstance(r0)     // Catch:{ Exception -> 0x045f }", 796], ["KeyFactory.getInstance(", "            java.security.KeyFactory r41 = java.security.KeyFactory.getInstance(r0)     // Catch:{ NoSuchAlgorithmException -> 0x0494 }", 818], ["getKeySpec(", "            java.security.spec.KeySpec r0 = r1.getKeySpec(r2, r0)     // Catch:{ Exception -> 0x054d }", 824], ["KeyFactory.getInstance(", "            java.security.KeyFactory r27 = java.security.KeyFactory.getInstance(r0)     // Catch:{ Exception -> 0x054d }", 832], ["getP()", "            java.math.BigInteger r0 = r29.getP()     // Catch:{ Exception -> 0x050f }", 836]], "Lht;": [["RSAPublicKeySpec(", "            this.i = (RSAPublicKey) KeyFactory.getInstance(\"RSA\").generatePublic(new RSAPublicKeySpec(this.e, this.f));", 105], ["KeyFactory.getInstance(", "            this.i = (RSAPublicKey) KeyFactory.getInstance(\"RSA\").generatePublic(new RSAPublicKeySpec(this.e, this.f));", 105], ["KeyFactory.getInstance(\"RSA", "            this.i = (RSAPublicKey) KeyFactory.getInstance(\"RSA\").generatePublic(new RSAPublicKeySpec(this.e, this.f));", 105]], "LgV;": [["Cipher", "    public String[] getEnabledCipherSuites() {", 122], ["Cipher", "    public String[] getSupportedCipherSuites() {", 142], ["Cipher", "    public void setEnabledCipherSuites(String[] strArr) {", 170]], "LgY;": [["Cipher", "                this.l.println(\"  cipher name: \" + heVar.getCipherSuite());", 52], ["Cipher", "                throw new C0167gf((byte) 80, new SSLProtocolException(\"The ciphered data increased more than on 1024 bytes\"));", 108], ["Cipher", "                this.l.println(\"SSLRecordProtocol.wrap: TLSCiphertext.fragment[\" + bArr2.length + \"]:\");", 110], ["Cipher", "            this.l.println(\"SSLRecordProtocol.getChangeCipherSpecMesage\");", 135], ["Cipher", "            this.l.println(\"TLSCiphertext.fragment[\" + j2 + \"]: ...\");", 207], ["Cipher", "                    this.l.println(\"TLSCiphertext.unwrap: APP DATA[\" + j2 + \"]:\");", 243]], "LgZ;": [["Cipher", "    public String[] getDefaultCipherSuites() {", 56], ["Cipher", "    public String[] getSupportedCipherSuites() {", 60]]}, "native_imports": []}}