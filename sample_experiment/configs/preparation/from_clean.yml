records_selection:
  input_path: "/path/to/cleaned.json" # json from cleaning
  malware_detection:
    output_features_path: Null # json
    output_target_path: Null # json
  malware_labeling:
    output_features_path: Null # json
    output_target_path: Null # json
    family_count: 10 # count of families to extract
    group_rest: True # whether to group the rest families into class OTHER
    families_to_exclude: # drop samples with these families
      - "UNKNOWN"
      - "BENIGN"

feature_engineering:
  train_set_ratio: 0.9
  min_ngrams: 1
  max_ngrams: 5
  strong_hashes:
    - "SHA-256"
    - "SHA-384"
    - "SHA-512"
    - "SHA-1"
    - "SHA-224"
  use_third_party_packages: False
  use_year: False
  use_tfidf: False
  min_document_frequency: 0.005
  max_document_frequency: 0.995
  normalize_by_class_count: True # whether to normalize the count features by overall class count
  scale_features: True # whether to use standard scaling
  task_configs:
    malware_detection:
      input_features_path: Null # json from records selection
      input_target_path: Null # json from records selection
      output_hdf_path: Null # hdf
    malware_labeling:
      input_features_path: Null # json from records selection
      input_target_path: Null # json from records selection
      output_hdf_path: Null # hdf

feature_selection:
  max_iterations: 100
  use_weak_features_boruta: False # whether to also use tentative (not strong) features
  n_trees: 200 # count of trees
  correlation_threshold: 0.95 # correlation threshold to filter correlated features on
  task_configs:
    malware_detection:
      input_hdf_path: Null # .h5 file with 'X_train', 'X_test', 'y_train', 'y_test' as keys
      output_hdf_path: "/path/to/output_hdf.h5"
    malware_labeling:
      input_hdf_path: Null # .h5 file with 'X_train', 'X_test', 'y_train', 'y_test' as keys
      output_hdf_path: "/path/to/output_hdf.h5"


