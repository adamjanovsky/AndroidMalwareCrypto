cleaning: # clean the dataset
  input_benign_paths: # paths to benign json files
    - /path/to/benign.json
  input_malicious_paths: # paths to malicious json files
    - /path/to/malicious.json
  output_path: /path/to/output.json # optional output path where to store the cleaned dataset
  labels: # cleaning of labels (if not defined then don't clean them)
    name_rules: # rules how to clean names
      appin: "appinventor"
      appinvent: "appinventor"
      autoins: "autoinst"
      badnewsn: "badnews"
      gingermaste: "gingermaster"
      hiddenap: "hiddenapp"
      hiddenapps: "hiddenapp"
      hiddenads: "hiddenad"
      plangton: "plankton"
      revmobads: "revmobad"
      smsspoofere: "smsspoofer"
      yuom: "yuomi"
    type_rules: # rules how to clean types
      trj: "trojan"
      troj: "trojan"
      trojansms: "smssend++trojan"
      spy: "spyware"
      fakeinst: "fakeinstall"
      drop: "dropper"
      click: "clicker"
      adsware: "adware"
      addware: "adware"
      smssender: "smssend"
      unclassifiedmalware: "UNKNOWN"
    names_to_ignore_during_mapping: # names which are supposed to be ignored when making sure the mapping name to type is one to one
      - "UNKNOWN" # ignore name unknown while calculating the most common name corresponding to each type
      - "BENIGN"
  remove_third_party_crypto_from_packages: True # whether to remove third party crypto libs from third party packages (duplicite info)
  remove_similar_records_classes: True # whether to remove similar classes (filenames)
  crypto_api_calls: # cleaning of crypto api calls (if not defined then don't clean them)
    remove_when_imports_empty: True
    remove_duplicates: True
    remove_false_positives: True
    calls_to_filter:
      - "Cipher"
      - "PRIVATE_KEY"
      - "SECRET_KEY"
      - "PUBLIC_KEY"
      - "ENCRYPT_MODE"
