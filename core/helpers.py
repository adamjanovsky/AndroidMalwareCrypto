import os
import sys
import contextlib
from time import gmtime, strftime


def find_all_files_with_extension(dir_to_search, extension):
    all_files = [os.path.join(dp, f) for dp, dn, fn in os.walk(os.path.expanduser(dir_to_search)) for f in fn]
    return [f for f in all_files if f.endswith(extension)]


def get_apk_label(path):
    tokens = path.split('/')
    if len(tokens) > 2:
        return tokens[-2]
    else:
        return 'none'


def establish_results_filepath(dir_path, prefix, suffix):
    while True:
        candidate = os.path.join(dir_path, prefix + '.' + suffix)
        if not os.path.exists(candidate):
            break
        prefix += '+'
    return candidate


@contextlib.contextmanager
def suppress_stdout(suppress=True):
    std_ref = sys.stdout
    if suppress:
        sys.stdout = open('/dev/null', 'w')
        yield
    sys.stdout = std_ref


def generate_experiment_results_filepath(desired_folder, filename, suffix):
    candidate_path = os.path.join(desired_folder, filename)

    while os.path.exists(candidate_path + suffix):
        os.path.join(candidate_path, '+')
        curr_time = strftime("_%Y%m%dt%H%M%S", gmtime())
        candidate_path += curr_time

    return candidate_path + suffix
