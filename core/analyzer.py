import pyjadx
import os
import pprint
from tqdm import tqdm


class Task:
    pass


class ComputeStringStatistics(Task):
    def __init__(self, jadx, apks_to_search, strings_to_search=None):
        self.jadx = jadx
        self.strings_to_search = strings_to_search
        self.apks_to_search = apks_to_search
        self.occurrences_counter = [0 for _ in range(len(self.strings_to_search))]

    def run(self):
        for apk in self.apks_to_search:
            self.count_occurrences_in_code(apk)

        print('Task result:')
        for word, occ in zip(self.strings_to_search, self.occurrences_counter):
            print(f'\t{word} occurrences: {occ}')

    def count_occurrences_in_code(self, apk):
        decompiler = self.jadx.load(apk)
        for cls in decompiler.classes:
            for line in cls.code.split('\n'):
                for i, s in enumerate(self.strings_to_search):
                    if s in line:
                        self.occurrences_counter[i] += 1
