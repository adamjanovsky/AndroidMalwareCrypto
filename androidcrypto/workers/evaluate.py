import lzma, pickle
from androidcrypto.constants import EvaluateException
from stopit import TimeoutException


def evaluate_worker(sample_record, categories):
    try:
        dx_path = sample_record['metadata']['dx_path']
        third_party_packages = sample_record['third_party_libs']
        crypto_api = {}

        with lzma.open(dx_path, 'rb') as handle:
            sample = pickle.load(handle)
        classes = sample.get_classes()

        for cls in classes:
            src_class = cls.get_vm_class().get_source()
            if src_class is None:
                continue
            class_api = []

            if third_party_packages and any([x in str(cls.name) for x in third_party_packages]):
                continue

            # TODO: Rethink this for for for for ... ugly
            for i, line in enumerate(src_class.split('\n')):
                for category_name, keywords in categories.items():
                    for word in keywords:
                        if word in line:
                            class_api.append([word, line, i])

            if class_api:
                crypto_api[str(cls.name)] = class_api

        sample_record['crypto_api'] = crypto_api

    except Exception as e:
        if isinstance(e, TimeoutException):
            raise
        else:
            raise EvaluateException
