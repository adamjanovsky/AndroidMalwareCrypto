import lzma, pickle


def evaluate_worker(sample_record, keywords):
    dx_path = sample_record['metadata']['dx_path']
    third_party_packages = sample_record['third_party_libs']
    dx_result = {}

    with lzma.open(dx_path, 'rb') as handle:
        sample = pickle.load(handle)
    classes = sample.get_classes()

    try:
        for cls in classes:
            src_class = cls.get_vm_class().get_source()
            if src_class is None:
                continue

            if third_party_packages and any([x in str(cls.name) for x in third_party_packages]):
                continue

            per_class_result = []

            for i, line in enumerate(src_class.split('\n')):
                for word in keywords:
                    if word in line:
                        per_class_result.append([word, line, i])

            if per_class_result:
                dx_result[str(cls.name)] = per_class_result
    except Exception as e:
        print(f'Eval exception: {e}')
        return False

    sample_record['crypto_api'] = dx_result
    return True