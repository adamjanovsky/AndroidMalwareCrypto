import json
import subprocess
from stopit import TimeoutException
from androidcrypto.constants import ThirdPartyException


def is_crypto_lib(crypto_lib, suspect):
    if isinstance(crypto_lib, list):
        return all([x in suspect for x in crypto_lib])
    elif isinstance(crypto_lib, str):
        return crypto_lib in suspect
    else:
        raise ThirdPartyException


def third_party_worker(sample, task_config):
    try:
        string_to_call = 'python2 ' + task_config.literadar_path + ' ' + sample.apk_path + ' ' + sample.literadar_tmp_path
        subprocess.run(string_to_call, shell=True, check=True)
        with open(sample.literadar_tmp_path, 'r') as handle:
            data = json.load(handle)

        sample.third_party_packages = []
        sample.third_party_crypto_libs = []

        for lib in data:
            sample.third_party_packages.append(lib['Package'])

            for crypto_lib in task_config.crypto_libs:
                if isinstance(crypto_lib, list) and all([x in lib['Standard Package'] for x in crypto_lib]):
                    sample.third_party_crypto_libs.append(lib['Standard Package'])
                elif isinstance(crypto_lib, str) and crypto_lib in lib['Standard Package']:
                    sample.third_party_crypto_libs.append(lib['Standard Package'])

    except Exception as e:
        if isinstance(e, TimeoutException):
            raise
        else:
            raise ThirdPartyException