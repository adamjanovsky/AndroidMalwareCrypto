import re
import hashlib
from androidcrypto import constants
import base64
import random


def decolorize_source_code(src_code):
    reaesc = re.compile(r'\x1b[^m]*m')
    return reaesc.sub('', src_code)


def flatten_list(lst):
    return [item for sublist in lst for item in sublist]


def hash_file(path):
    hasher = hashlib.sha256()
    with open(path, 'rb') as afile:
        buf = afile.read(constants.BLOCKSIZE)
        while len(buf) > 0:
            hasher.update(buf)
            buf = afile.read(constants.BLOCKSIZE)
    return hasher.hexdigest()


def decode_base64_line_of_code(line_of_code):
    splt = line_of_code.split('Base64.decode("')
    if len(splt) > 1:
        return base64.decodebytes(str.encode(splt[1].split('\"')[0]))
    else:
        return None


def shuffle_csv(clean_csv_path, shuffled_csv_path):
    with open(clean_csv_path, 'r') as handle:
        data = handle.readlines()
        header, rest = data[0], data[1:]
    random.shuffle(rest)
    with open(shuffled_csv_path, 'w') as handle:
        handle.write(header)
        for line in rest:
            handle.write(line)
