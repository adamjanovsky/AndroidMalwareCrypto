"""
File contains utility functions used for evaluation.

Author: Dominik Macko
"""

import os
from typing import Optional, Dict

import numpy as np
import pandas as pd
from sklearn.dummy import DummyClassifier

def load_predictions(dirpath: str,
                     baseline_path: Optional[str]=None
                    ) -> Dict[str, pd.Series]:
    """Loads all the predictions from given directory into a dict."""
    
    result = {}
    rows = 0
    for fname in os.listdir(dirpath):
        df = pd.read_csv(os.path.join(dirpath, fname), index_col=0, squeeze=True)
        result[fname[:-len(".csv")]] = df
        rows = df.shape[0]
    train_y = pd.read_csv(baseline_path, index_col=0)
    if baseline_path:
        result["most_common_baseline"] = get_baseline_most_common(train_y, rows)
    return result

def get_baseline_most_common(train_y: pd.Series,
                             rows: int
                            ) -> pd.DataFrame:
    """Gets most common baseline model prediction."""
    
    result = train_y.copy()
    for col in train_y.columns:
        result[col] = result[col].mode().values[0]
    return result[:rows]

def get_baseline_stratified(train_y: pd.Series,
                            rows: int,
                            seed: int=42
                           ) -> pd.DataFrame:
    """Gets stratified random baseline predictions."""
    
    dummy = DummyClassifier(strategy="stratified", random_state=seed)
    dummy.fit(np.empty(train_y.shape), train_y)
    return dummy.predict(np.empty((rows,)))
